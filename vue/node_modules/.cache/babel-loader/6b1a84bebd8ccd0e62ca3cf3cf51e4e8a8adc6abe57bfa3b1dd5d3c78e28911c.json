{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"balanceBar\"\n}, \"収支データ\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"balanceTable\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"th\", null, \"収入計\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"inTotal\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"th\", null, \"支出計\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"outTotal\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"収支計\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  id: \"td-profit\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"myChart\",\n  width: \"1400\",\n  height: \"200\"\n})], -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"categoryData\"\n}, \"カテゴリ別\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"支出\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tr\", null, [_hoisted_3, _createElementVNode(\"td\", _hoisted_4, \"¥ \" + _toDisplayString($data.inTotal), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_hoisted_5, _createElementVNode(\"td\", _hoisted_6, \"¥ \" + _toDisplayString($data.outTotal), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_hoisted_7, _createElementVNode(\"td\", _hoisted_8, \"¥ \" + _toDisplayString($data.profit), 1 /* TEXT */)])]), _hoisted_9, _hoisted_10, _hoisted_11, _createCommentVNode(\" <table class=\\\"catogoryTable\\\">\\n        <tr><th>収入計</th><td class=\\\"inTotal\\\">¥ {{ inTotal }}</td></tr>\\n        <tr><th>支出計</th><td class=\\\"outTotal\\\">¥ {{ outTotal }}</td></tr>\\n        <tr><th>収支計</th><td id=\\\"td-profit\\\">¥ {{ profit }}</td></tr>\\n    </table> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","class","width","height","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","inTotal","_hoisted_5","_hoisted_6","outTotal","_hoisted_7","_hoisted_8","profit","_hoisted_9","_hoisted_10","_hoisted_11","_createCommentVNode"],"sources":["/app/src/components/Graph.vue"],"sourcesContent":["<template>\n    <h3 id=\"balanceBar\">収支データ</h3>\n    <table class=\"balanceTable\">\n        <tr><th>収入計</th><td class=\"inTotal\">¥ {{ inTotal }}</td></tr>\n        <tr><th>支出計</th><td class=\"outTotal\">¥ {{ outTotal }}</td></tr>\n        <tr><th>収支計</th><td id=\"td-profit\">¥ {{ profit }}</td></tr>\n    </table>\n    <div>\n        <canvas id=\"myChart\" width=\"1400\" height=\"200\"></canvas>\n    </div>\n\n    <h3 id=\"categoryData\">カテゴリ別</h3>\n    <h4>支出</h4>\n    <!-- <table class=\"catogoryTable\">\n        <tr><th>収入計</th><td class=\"inTotal\">¥ {{ inTotal }}</td></tr>\n        <tr><th>支出計</th><td class=\"outTotal\">¥ {{ outTotal }}</td></tr>\n        <tr><th>収支計</th><td id=\"td-profit\">¥ {{ profit }}</td></tr>\n    </table> -->\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Graph',\n    // props: ['oeconomicas','year_month'],\n    data () {\n        return {\n            myChart:\"\",\n            balanceBarData: [],\n            inTotal: 0,\n            outTotal: 0,\n            profit: 0,\n            barData: {},\n            options: {\n                responsive: false,\n                plugins: {\n                    legend: {\n                        display: false,\n                    }\n                },\n                indexAxis: 'y',\n                maintainAspectRatio: false,\n                // scales: {\n                //     x: {\n                //         min: 0,\n                //         max: 300000,\n                //     }\n                // },\n            },    \n        }\n    },\n    // created:function () {\n    //     console.log(this.oeconomicas);\n    //     this.calcBalance(this.oeconomicas);\n    // },\n    // mounted() {\n    //     this.createGraph();\n    //     // updateGraph(this.oeconomicas);\n    // },\n    methods: {\n        firstAction: function(data,expenceCategories){\n            this.oeconomicas = data;\n            this.updateGraph(this.oeconomicas);\n            this.calcCategoryData(this.oeconomicas,expenceCategories);\n        },\n        calcBalance: function(data) {\n            var outAmount = 0;\n            var inAmount = 0;\n            for(var index=0; index < data.length; index++) {\n                var amount = this.replaceAmount(data[index]['amount']);\n                if ( data[index]['balance'] == \"支出\" ) {\n                    outAmount = outAmount + Number(amount);\n                } else if ( data[index]['balance'] == \"収入\" ) {\n                    inAmount = inAmount + Number(amount);\n                }\n            }\n            this.balanceBarData = [inAmount, outAmount];\n            this.setBarData();  \n\n            // 金額にカンマをつける\n            this.inTotal = this.csAmount(this.balanceBarData[0]);\n            this.outTotal = this.csAmount(this.balanceBarData[1]);\n            this.profit = this.csAmount(this.balanceBarData[0] - this.balanceBarData[1]);\n\n            // 収支計の金額のフォントの色を黒字か赤字かで変更する。\n            var objProfit = document.getElementById(\"td-profit\");\n            if ( (this.balanceBarData[0] - this.balanceBarData[1]) > 0 ) {\n                objProfit.style.color = '#0000FF'; \n            } else if ( (this.balanceBarData[0] - this.balanceBarData[1]) < 0 ) {\n                objProfit.style.color = '#FF0000';\n            } \n\n        },\n        csAmount: function(amount) {\n            return amount.toLocaleString();\n        },\n        replaceAmount: function(amount) {\n            // 1,000のようにカンマがある状態でも変更できるようにする関数\n            if ( amount.match(/,/)) {\n                amount = amount.replace(\",\", \"\");\n            } \n            return amount;\n        },\n        setBarData: function(){\n            this.barData = {\n                labels: ['収入', '支出'],\n                datasets: [\n                    {\n                        // label: ['yen'],\n                        data: this.balanceBarData,\n                        backgroundColor:['#4169e1','#f87979'],\n                    }\n                ]\n            }\n        },\n        createGraph: function() {\n            const ctx = document.getElementById('myChart').getContext('2d');\n            this.myChart = new Chart(ctx, {\n                type: 'bar',\n                data: this.barData,\n                options: this.options,\n            });\n        },\n        updateGraph: function(data) {\n            if (this.myChart) {\n                // Destroy the existing chart instance\n                this.myChart.destroy();\n            }\n            // Recalculate amount of each balance.\n            this.calcBalance(data);\n            // Create a new chart instance\n            this.createGraph();\n        },\n        calcCategoryData: function(data,expenceCategories) {\n            // 登録されているカテゴリを抽出\n            var categoryArray = [];\n            for(var i=0; i < data.length; i++) {\n                categoryArray.push(data[index]['category']);\n            }\n            // 重複排除\n            const categoryList = Array.from(new Set(categoryArray));\n            // ソート\n            var categoryList2 = [];\n            for(var i=0; i < expenceCategories.length; i++) {\n                for(var j=0; j < categoryList.length; j++) {\n                    if ( expenceCategories[i] == categoryList[j] ) {\n                        categoryList2.push(categoryList[j]);\n                    }\n                }\n            }\n            console.log(categoryList2);\n        },\n    }\n}\n</script>"],"mappings":";gCACIA,mBAAA,CAA8B;EAA1BC,EAAE,EAAC;AAAY,GAAC,OAAK;;EAClBC,KAAK,EAAC;AAAc;gCACnBF,mBAAA,CAAY,YAAR,KAAG;;EAASE,KAAK,EAAC;AAAS;gCAC/BF,mBAAA,CAAY,YAAR,KAAG;;EAASE,KAAK,EAAC;AAAU;gCAChCF,mBAAA,CAAY,YAAR,KAAG;;EAASC,EAAE,EAAC;AAAW;gCAEtCD,mBAAA,CAEM,c,aADFA,mBAAA,CAAwD;EAAhDC,EAAE,EAAC,SAAS;EAACE,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC;;iCAG7CJ,mBAAA,CAAgC;EAA5BC,EAAE,EAAC;AAAc,GAAC,OAAK;iCAC3BD,mBAAA,CAAW,YAAP,IAAE;;;6DAXNK,UAA8B,EAC9BL,mBAAA,CAIQ,SAJRM,UAIQ,GAHJN,mBAAA,CAA6D,aAAzDO,UAAY,EAAAP,mBAAA,CAAwC,MAAxCQ,UAAwC,EAApB,IAAE,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,OAAO,iB,GAChDX,mBAAA,CAA+D,aAA3DY,UAAY,EAAAZ,mBAAA,CAA0C,MAA1Ca,UAA0C,EAArB,IAAE,GAAAJ,gBAAA,CAAGC,KAAA,CAAAI,QAAQ,iB,GAClDd,mBAAA,CAA2D,aAAvDe,UAAY,EAAAf,mBAAA,CAAsC,MAAtCgB,UAAsC,EAAnB,IAAE,GAAAP,gBAAA,CAAGC,KAAA,CAAAO,MAAM,iB,KAElDC,UAEM,EAENC,WAAgC,EAChCC,WAAW,EACXC,mBAAA,8QAIY,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}