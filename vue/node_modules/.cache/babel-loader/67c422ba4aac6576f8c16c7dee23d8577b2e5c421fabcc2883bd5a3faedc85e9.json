{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"balanceBar\"\n}, \"収支データ\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"balanceTable\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"th\", null, \"収入計\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"inTotal\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"th\", null, \"支出計\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"outTotal\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"収支計\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  id: \"td-profit\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"balanceBarChart\",\n  width: \"1400\",\n  height: \"200\"\n})], -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"categoryData\"\n}, \"カテゴリ別\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"支出\", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"categoryTable\"\n};\nconst _hoisted_13 = [\"value\"];\nconst _hoisted_14 = {\n  class: \"categoryTotal\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"pChart-container\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"outPieChart\",\n  class: \"pChart\"\n})], -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"収入\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"categoryTable\"\n};\nconst _hoisted_18 = [\"value\"];\nconst _hoisted_19 = {\n  class: \"categoryTotal\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"pChart-container\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"inPieChart\",\n  class: \"pChart\"\n})], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tr\", null, [_hoisted_3, _createElementVNode(\"td\", _hoisted_4, \"¥ \" + _toDisplayString($data.inTotal), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_hoisted_5, _createElementVNode(\"td\", _hoisted_6, \"¥ \" + _toDisplayString($data.outTotal), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_hoisted_7, _createElementVNode(\"td\", _hoisted_8, \"¥ \" + _toDisplayString($data.profit), 1 /* TEXT */)])]), _hoisted_9, _hoisted_10, _hoisted_11, _createElementVNode(\"table\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.eCategoryList, (eCategory, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      value: eCategory\n    }, [_createElementVNode(\"th\", null, _toDisplayString(eCategory), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_14, \"¥ \" + _toDisplayString($data.eCategoryTotals[eCategory]), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_13);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_15, _hoisted_16, _createElementVNode(\"table\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.iCategoryList, (iCategory, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      value: iCategory\n    }, [_createElementVNode(\"th\", null, _toDisplayString(iCategory), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_19, \"¥ \" + _toDisplayString($data.iCategoryTotals[iCategory]), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_18);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_20], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","class","width","height","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","inTotal","_hoisted_5","_hoisted_6","outTotal","_hoisted_7","_hoisted_8","profit","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_createElementBlock","_Fragment","_renderList","eCategoryList","eCategory","index","key","value","_hoisted_14","eCategoryTotals","_hoisted_15","_hoisted_16","_hoisted_17","iCategoryList","iCategory","_hoisted_19","iCategoryTotals","_hoisted_20"],"sources":["/app/src/components/Graph.vue"],"sourcesContent":["<template>\n    <h3 id=\"balanceBar\">収支データ</h3>\n    <table class=\"balanceTable\">\n        <tr><th>収入計</th><td class=\"inTotal\">¥ {{ inTotal }}</td></tr>\n        <tr><th>支出計</th><td class=\"outTotal\">¥ {{ outTotal }}</td></tr>\n        <tr><th>収支計</th><td id=\"td-profit\">¥ {{ profit }}</td></tr>\n    </table>\n    <div>\n        <canvas id=\"balanceBarChart\" width=\"1400\" height=\"200\"></canvas>\n    </div>\n\n    <h3 id=\"categoryData\">カテゴリ別</h3>\n    <h4>支出</h4>\n    <table class=\"categoryTable\">\n        <tr v-for=\"(eCategory, index) in eCategoryList\" :key=\"index\" :value=\"eCategory\"> \n            <th>{{ eCategory }}</th><td class=\"categoryTotal\">¥ {{ eCategoryTotals[eCategory] }}</td>\n        </tr>\n    </table>\n    <div class=\"pChart-container\">\n        <canvas id=\"outPieChart\" class=\"pChart\"></canvas>\n    </div>\n    <h4>収入</h4>\n    <table class=\"categoryTable\">\n        <tr v-for=\"(iCategory, index) in iCategoryList\" :key=\"index\" :value=\"iCategory\"> \n            <th>{{ iCategory }}</th><td class=\"categoryTotal\">¥ {{ iCategoryTotals[iCategory] }}</td>\n        </tr>\n    </table>\n    <div class=\"pChart-container\">\n        <canvas id=\"inPieChart\" class=\"pChart\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Graph',\n    // props: ['oeconomicas','year_month'],\n    data () {\n        return {\n            balanceBarChart: null,\n            outPieChart: null,\n            balanceBarData: [],\n            inPieData: [],\n            outPieData: [],\n            inTotal: 0,\n            outTotal: 0,\n            profit: 0,\n            barData: {},\n            eCategoryList: [],\n            eCategoryTotals: {},\n            iCategoryList: [],\n            iCategoryTotals: {},\n            eCategoryColors: {},\n            iCategoryColors: {},\n            options: {\n                responsive: false,\n                plugins: {\n                    legend: {\n                        display: false,\n                    }\n                },\n                indexAxis: 'y',\n                maintainAspectRatio: false,\n            },\n            outPieOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        display: true,\n                        text: '支出カテゴリ別',\n                        // fontSize: 120,\n                    },\n                    legend: {\n                        position: 'top',\n                        display: false\n                    },\n                },\n            },\n            inPieOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        display: true,\n                        text: '収入カテゴリ別',\n                    },\n                    legend: {\n                        position: 'top',\n                        display: false\n                    },\n                },\n            }\n        }\n    },\n    // コメントアウト（備忘）\n    // created:function () {\n    //     console.log(this.oeconomicas);\n    //     this.calcBalance(this.oeconomicas);\n    // },\n    // mounted() {\n    //     this.createBarGraph();\n    //     // updateBarGraph(this.oeconomicas);\n    // },\n    methods: {\n        firstAction: function(data,categories){\n            this.oeconomicas = data;\n            this.eCategoryList = this.sortCategoryName(categories[0]);\n            this.eCategoryTotals = this.calcCategoryData(this.eCategoryList,'支出');\n            this.eCategoryColors = this.setCategoryColors(this.eCategoryList,'支出');\n            this.iCategoryList = this.sortCategoryName(categories[1]);\n            this.iCategoryTotals = this.calcCategoryData(this.iCategoryList,'収入');\n            this.iCategoryColors = this.setCategoryColors(this.iCategoryList,'収入');\n            this.updateBarGraph(this.oeconomicas);\n            this.updatePieGraph();\n        },\n        updateBarGraph: function(data) {\n            if (this.balanceBarChart) {\n                this.balanceBarChart.destroy();    // Destroy the existing chart instance\n            }\n            this.calcBalance(data);    // Recalculate amount of each balance.\n            this.createBarGraph();    // Create a new chart instance\n        },\n        updatePieGraph: function() {\n            if (this.outPieChart) {\n                this.outPieChart.destroy();    // Destroy the existing chart instance\n            }\n            if (this.inPieChart) {\n                this.inPieChart.destroy();    // Destroy the existing chart instance\n            }\n            this.setPieData();\n            this.createPieGraph();\n        },\n        calcBalance: function(data) {\n            var outAmount = 0;\n            var inAmount = 0;\n            for(var index=0; index < data.length; index++) {\n                var amount = this.replaceAmount(data[index]['amount']);\n                if ( data[index]['balance'] == \"支出\" ) {\n                    outAmount = outAmount + Number(amount);\n                } else if ( data[index]['balance'] == \"収入\" ) {\n                    inAmount = inAmount + Number(amount);\n                }\n            }\n            this.balanceBarData = [inAmount, outAmount];\n            this.setBarData();\n\n            // 金額にカンマをつける\n            this.inTotal = this.csAmount(this.balanceBarData[0]);\n            this.outTotal = this.csAmount(this.balanceBarData[1]);\n            this.profit = this.csAmount(this.balanceBarData[0] - this.balanceBarData[1]);\n\n            // 収支計の金額のフォントの色を黒字か赤字かで変更する。\n            var objProfit = document.getElementById(\"td-profit\");\n            if ( (this.balanceBarData[0] - this.balanceBarData[1]) > 0 ) {\n                objProfit.style.color = '#0000FF'; \n            } else if ( (this.balanceBarData[0] - this.balanceBarData[1]) < 0 ) {\n                objProfit.style.color = '#FF0000';\n            }\n        },\n        setBarData: function(){\n            this.barData = {\n                labels: ['収入', '支出'],\n                datasets: [{\n                    data: this.balanceBarData,\n                    backgroundColor:['#4169e1','#f87979'],\n                }]\n            };\n        },\n        setPieData: function(){\n            var eCategoryDatas = [];\n            var iCategoryDatas = [];\n            for(var i=0; i < this.eCategoryList.length; i++){\n                eCategoryDatas.push(this.replaceAmount(this.eCategoryTotals[this.eCategoryList[i]]));\n            }\n            for(var i=0; i < this.iCategoryList.length; i++){\n                iCategoryDatas.push(this.replaceAmount(this.iCategoryTotals[this.iCategoryList[i]]));\n            }\n            this.outPieData = {\n                labels: this.eCategoryList,\n                datasets: [{\n                    data: eCategoryDatas,\n                    backgroundColor: [],\n                    // hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n                }]\n            }\n            this.inPieData = {\n                labels: this.iCategoryList,\n                datasets: [{\n                    data: iCategoryDatas,\n                    backgroundColor: [],\n                }]\n            }\n            // 色の生成\n            // const getRandomColor = () => {\n            //     const r = Math.floor(Math.random() * 256);\n            //     const g = Math.floor(Math.random() * 256);\n            //     const b = Math.floor(Math.random() * 256);\n            //     return `rgba(${r}, ${g}, ${b}, 0.8)`;\n            // };\n            // 背景色の設定\n            this.outPieData.datasets[0].backgroundColor = this.outPieData.labels.map((category) => this.eCategoryColors[category]);\n            this.inPieData.datasets[0].backgroundColor = this.inPieData.labels.map(() => getRandomColor());\n            // this.outPieData.datasets[0].backgroundColor = this.outPieData.labels.map(() => getRandomColor());\n            // this.inPieData.datasets[0].backgroundColor = this.inPieData.labels.map(() => getRandomColor());\n            console.log(this.outPieData.datasets[0].backgroundColor);\n            console.log(this.inPieData.datasets[0].backgroundColor);\n        },\n        createBarGraph: function() {\n            const ctx = document.getElementById('balanceBarChart').getContext('2d');\n            this.balanceBarChart = new Chart(ctx, {\n                type: 'bar',\n                data: this.barData,\n                options: this.options,\n            });\n        },\n        createPieGraph: function() {\n            const ctx1 = document.getElementById('outPieChart').getContext('2d');\n            const ctx2 = document.getElementById('inPieChart').getContext('2d');\n            this.outPieChart = new Chart(ctx1, {\n                type: 'pie',\n                data: this.outPieData,\n                options: this.outPieOptions,\n            });\n            this.inPieChart = new Chart(ctx2, {\n                type: 'pie',\n                data: this.inPieData,\n                options: this.inPieOptions,\n            });\n        },\n        csAmount: function(amount) {\n            return amount.toLocaleString();\n        },\n        replaceAmount: function(amount) {\n            // 1,000のようにカンマがある状態でも変更できるようにする関数\n            if ( amount.match(/,/)) {\n                amount = amount.replace(\",\", \"\");\n            } \n            return amount;\n        },\n        sortCategoryName: function(Categories) {\n            // 登録されているカテゴリを抽出\n            var categoryArray = [];\n            for(var i=0; i < this.oeconomicas.length; i++) {\n                categoryArray.push(this.oeconomicas[i]['category']);\n            }\n            // 重複排除\n            const categoryList = Array.from(new Set(categoryArray));\n            // ソート\n            var categoryList2 = [];\n            for(var index=0; index < Categories.length; index++) {\n                for(var j=0; j < categoryList.length; j++) {\n                    if ( Categories[index] == categoryList[j] ) {\n                        categoryList2.push(categoryList[j]);\n                    }\n                }\n            }\n            return categoryList2;\n        },\n        calcCategoryData: function(categoryList,strBalance) {\n            var categoryTotals = {};\n            // オブジェクトにプロパティを追加,初期化\n            for(var i=0; i < categoryList.length; i++) {\n                categoryTotals[categoryList[i]] = \"\";\n            }\n            // カテゴリ別の金額合計を算出\n            for(const category in categoryTotals) {\n                var total = 0;\n                for(var j=0; j < this.oeconomicas.length; j++) {\n                    if ( category == this.oeconomicas[j]['category'] && strBalance == this.oeconomicas[j]['balance']) {\n                        var amount = this.replaceAmount(this.oeconomicas[j]['amount']);\n                        total = total + Number(amount);\n                    }\n                }\n                categoryTotals[category] = this.csAmount(total);\n            }\n            return categoryTotals;\n        },\n        setCategoryColors: function(categoryList,strBalance){\n            var categoryColors = {};\n            for(var i=0; i < categoryList.length; i++) {\n                categoryColors[categoryList[i]] = \"\";\n            }\n            var j = 0;\n            for(const category in categoryColors) {\n                if ( strBalance == '収入') {\n                    var colorCodes = [\"rgba(0, 255, 255, 0.8)\",\"rgba(255, 235, 205, 0.8)\",\"rgba(240, 255, 240, 0.8)\"];\n                } else if ( strBalance == '支出') {\n                    var colorCodes = [\"rgba(156, 30, 195, 0.8)\",\"rgba(58, 255, 86, 0.8)\",\"rgba(154, 77, 177, 0.8)\",\"rgba(77, 124, 221, 0.8)\",\"rgba(102, 65, 85, 0.8)\",\"rgba(12, 203, 195, 0.8)\",\"rgba(230, 36, 92, 0.8)\",\"rgba(187, 240, 120, 0.8)\",\"rgba(6, 186, 225, 0.8)\",\"rgba(202, 5, 7, 0.8)\",\"rgba(113, 160, 39, 0.8)\",\"rgba(226, 195, 121, 0.8)\",\"rgba(207, 183, 50, 0.8)\"];\n                }\n                categoryColors[category] = colorCodes[j];\n                j = j + 1;\n            }\n            return categoryColors;\n        }\n    }\n}\n</script>"],"mappings":";gCACIA,mBAAA,CAA8B;EAA1BC,EAAE,EAAC;AAAY,GAAC,OAAK;;EAClBC,KAAK,EAAC;AAAc;gCACnBF,mBAAA,CAAY,YAAR,KAAG;;EAASE,KAAK,EAAC;AAAS;gCAC/BF,mBAAA,CAAY,YAAR,KAAG;;EAASE,KAAK,EAAC;AAAU;gCAChCF,mBAAA,CAAY,YAAR,KAAG;;EAASC,EAAE,EAAC;AAAW;gCAEtCD,mBAAA,CAEM,c,aADFA,mBAAA,CAAgE;EAAxDC,EAAE,EAAC,iBAAiB;EAACE,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC;;iCAGrDJ,mBAAA,CAAgC;EAA5BC,EAAE,EAAC;AAAc,GAAC,OAAK;iCAC3BD,mBAAA,CAAW,YAAP,IAAE;;EACCE,KAAK,EAAC;AAAe;;;EAEQA,KAAK,EAAC;AAAe;iCAGzDF,mBAAA,CAEM;EAFDE,KAAK,EAAC;AAAkB,I,aACzBF,mBAAA,CAAiD;EAAzCC,EAAE,EAAC,aAAa;EAACC,KAAK,EAAC;;iCAEnCF,mBAAA,CAAW,YAAP,IAAE;;EACCE,KAAK,EAAC;AAAe;;;EAEQA,KAAK,EAAC;AAAe;iCAGzDF,mBAAA,CAEM;EAFDE,KAAK,EAAC;AAAkB,I,aACzBF,mBAAA,CAAgD;EAAxCC,EAAE,EAAC,YAAY;EAACC,KAAK,EAAC;;;;6DA3BlCG,UAA8B,EAC9BL,mBAAA,CAIQ,SAJRM,UAIQ,GAHJN,mBAAA,CAA6D,aAAzDO,UAAY,EAAAP,mBAAA,CAAwC,MAAxCQ,UAAwC,EAApB,IAAE,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,OAAO,iB,GAChDX,mBAAA,CAA+D,aAA3DY,UAAY,EAAAZ,mBAAA,CAA0C,MAA1Ca,UAA0C,EAArB,IAAE,GAAAJ,gBAAA,CAAGC,KAAA,CAAAI,QAAQ,iB,GAClDd,mBAAA,CAA2D,aAAvDe,UAAY,EAAAf,mBAAA,CAAsC,MAAtCgB,UAAsC,EAAnB,IAAE,GAAAP,gBAAA,CAAGC,KAAA,CAAAO,MAAM,iB,KAElDC,UAEM,EAENC,WAAgC,EAChCC,WAAW,EACXpB,mBAAA,CAIQ,SAJRqB,WAIQ,I,kBAHJC,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAF4Bd,KAAA,CAAAe,aAAa,GAAlCC,SAAS,EAAEC,KAAK;yBAA5BL,mBAAA,CAEK;MAF4CM,GAAG,EAAED,KAAK;MAAGE,KAAK,EAAEH;QACjE1B,mBAAA,CAAwB,YAAAS,gBAAA,CAAjBiB,SAAS,kBAAQ1B,mBAAA,CAAiE,MAAjE8B,WAAiE,EAAvC,IAAE,GAAArB,gBAAA,CAAGC,KAAA,CAAAqB,eAAe,CAACL,SAAS,kB;oCAGxFM,WAEM,EACNC,WAAW,EACXjC,mBAAA,CAIQ,SAJRkC,WAIQ,I,kBAHJZ,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAF4Bd,KAAA,CAAAyB,aAAa,GAAlCC,SAAS,EAAET,KAAK;yBAA5BL,mBAAA,CAEK;MAF4CM,GAAG,EAAED,KAAK;MAAGE,KAAK,EAAEO;QACjEpC,mBAAA,CAAwB,YAAAS,gBAAA,CAAjB2B,SAAS,kBAAQpC,mBAAA,CAAiE,MAAjEqC,WAAiE,EAAvC,IAAE,GAAA5B,gBAAA,CAAGC,KAAA,CAAA4B,eAAe,CAACF,SAAS,kB;oCAGxFG,WAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}