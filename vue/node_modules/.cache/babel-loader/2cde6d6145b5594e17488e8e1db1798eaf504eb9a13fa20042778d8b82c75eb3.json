{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'Graph',\n  // props: ['oeconomicas','year_month'],\n  data() {\n    return {\n      balanceBarChart: null,\n      outPieChart: null,\n      balanceBarData: [],\n      outPieData: [],\n      inTotal: 0,\n      outTotal: 0,\n      profit: 0,\n      barData: {},\n      eCategoryList: [],\n      eCategoryTotals: {},\n      iCategoryList: [],\n      iCategoryTotals: {},\n      options: {\n        responsive: false,\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        indexAxis: 'y',\n        maintainAspectRatio: false\n      },\n      outPieOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          title: {\n            display: true,\n            text: '支出カテゴリ別'\n          }\n        },\n        maintainAspectRatio: false,\n        width: 400,\n        height: 400\n      }\n    };\n  },\n  // created:function () {\n  //     console.log(this.oeconomicas);\n  //     this.calcBalance(this.oeconomicas);\n  // },\n  // mounted() {\n  //     this.createBarGraph();\n  //     // updateBarGraph(this.oeconomicas);\n  // },\n  methods: {\n    firstAction: function (data, categories) {\n      this.oeconomicas = data;\n      this.eCategoryList = this.sortCategoryName(categories[0]);\n      this.eCategoryTotals = this.calcCategoryData(this.eCategoryList);\n      this.iCategoryList = this.sortCategoryName(categories[1]);\n      this.iCategoryTotals = this.calcCategoryData(this.iCategoryList);\n      console.log(this.eCategoryTotals);\n      this.updateBarGraph(this.oeconomicas);\n      this.updatePieGraph();\n    },\n    updateBarGraph: function (data) {\n      if (this.balanceBarChart) {\n        this.balanceBarChart.destroy(); // Destroy the existing chart instance\n      }\n\n      this.calcBalance(data); // Recalculate amount of each balance.\n      this.createBarGraph(); // Create a new chart instance\n    },\n\n    updatePieGraph: function () {\n      if (this.outPieChart) {\n        this.outPieChart.destroy(); // Destroy the existing chart instance\n      }\n\n      this.createPieGraph();\n    },\n    calcBalance: function (data) {\n      var outAmount = 0;\n      var inAmount = 0;\n      for (var index = 0; index < data.length; index++) {\n        var amount = this.replaceAmount(data[index]['amount']);\n        if (data[index]['balance'] == \"支出\") {\n          outAmount = outAmount + Number(amount);\n        } else if (data[index]['balance'] == \"収入\") {\n          inAmount = inAmount + Number(amount);\n        }\n      }\n      this.balanceBarData = [inAmount, outAmount];\n      this.setBarData();\n\n      // 金額にカンマをつける\n      this.inTotal = this.csAmount(this.balanceBarData[0]);\n      this.outTotal = this.csAmount(this.balanceBarData[1]);\n      this.profit = this.csAmount(this.balanceBarData[0] - this.balanceBarData[1]);\n\n      // 収支計の金額のフォントの色を黒字か赤字かで変更する。\n      var objProfit = document.getElementById(\"td-profit\");\n      if (this.balanceBarData[0] - this.balanceBarData[1] > 0) {\n        objProfit.style.color = '#0000FF';\n      } else if (this.balanceBarData[0] - this.balanceBarData[1] < 0) {\n        objProfit.style.color = '#FF0000';\n      }\n    },\n    setBarData: function () {\n      this.barData = {\n        labels: ['収入', '支出'],\n        datasets: [{\n          data: this.balanceBarData,\n          backgroundColor: ['#4169e1', '#f87979']\n        }]\n      };\n    },\n    setPieData: function () {\n      this.outPieData = {\n        // labels: this.eCategoryList,\n        labels: [\"Red\", \"Blue\", \"Yellow\"],\n        datasets: [{\n          // label: 'My First Dataset',\n          data: [10, 20, 30],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }]\n      };\n    },\n    createBarGraph: function () {\n      const ctx = document.getElementById('balanceBarChart').getContext('2d');\n      this.balanceBarChart = new Chart(ctx, {\n        type: 'bar',\n        data: this.barData,\n        options: this.options\n      });\n    },\n    createPieGraph: function () {\n      const ctx = document.getElementById('outPieChart').getContext('2d');\n      this.outPieChart = new Chart(ctx2, {\n        type: 'pie',\n        data: this.outPieData,\n        options: this.outPieOptions\n      });\n    },\n    csAmount: function (amount) {\n      return amount.toLocaleString();\n    },\n    replaceAmount: function (amount) {\n      // 1,000のようにカンマがある状態でも変更できるようにする関数\n      if (amount.match(/,/)) {\n        amount = amount.replace(\",\", \"\");\n      }\n      return amount;\n    },\n    sortCategoryName: function (Categories) {\n      // 登録されているカテゴリを抽出\n      var categoryArray = [];\n      for (var i = 0; i < this.oeconomicas.length; i++) {\n        categoryArray.push(this.oeconomicas[i]['category']);\n      }\n      // 重複排除\n      const categoryList = Array.from(new Set(categoryArray));\n      // ソート\n      var categoryList2 = [];\n      for (var index = 0; index < Categories.length; index++) {\n        for (var j = 0; j < categoryList.length; j++) {\n          if (Categories[index] == categoryList[j]) {\n            categoryList2.push(categoryList[j]);\n          }\n        }\n      }\n      return categoryList2;\n    },\n    calcCategoryData: function (categoryList) {\n      var categoryTotals = {};\n      // オブジェクトにプロパティを追加,初期化\n      for (var i = 0; i < categoryList.length; i++) {\n        categoryTotals[categoryList[i]] = \"\";\n      }\n      // カテゴリ別の金額合計を算出\n      for (const category in categoryTotals) {\n        var total = 0;\n        for (var j = 0; j < this.oeconomicas.length; j++) {\n          if (category == this.oeconomicas[j]['category']) {\n            var amount = this.replaceAmount(this.oeconomicas[j]['amount']);\n            total = total + Number(amount);\n          }\n        }\n        categoryTotals[category] = this.csAmount(total);\n      }\n      return categoryTotals;\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","name","data","balanceBarChart","outPieChart","balanceBarData","outPieData","inTotal","outTotal","profit","barData","eCategoryList","eCategoryTotals","iCategoryList","iCategoryTotals","options","responsive","plugins","legend","display","indexAxis","maintainAspectRatio","outPieOptions","position","title","text","width","height","methods","firstAction","categories","oeconomicas","sortCategoryName","calcCategoryData","console","log","updateBarGraph","updatePieGraph","destroy","calcBalance","createBarGraph","createPieGraph","outAmount","inAmount","index","length","amount","replaceAmount","Number","setBarData","csAmount","objProfit","document","getElementById","style","color","labels","datasets","backgroundColor","setPieData","hoverBackgroundColor","ctx","getContext","type","ctx2","toLocaleString","match","replace","Categories","categoryArray","i","push","categoryList","Array","from","Set","categoryList2","j","categoryTotals","category","total"],"sources":["/app/src/components/Graph.vue"],"sourcesContent":["<template>\n    <h3 id=\"balanceBar\">収支データ</h3>\n    <table class=\"balanceTable\">\n        <tr><th>収入計</th><td class=\"inTotal\">¥ {{ inTotal }}</td></tr>\n        <tr><th>支出計</th><td class=\"outTotal\">¥ {{ outTotal }}</td></tr>\n        <tr><th>収支計</th><td id=\"td-profit\">¥ {{ profit }}</td></tr>\n    </table>\n    <div>\n        <canvas id=\"balanceBarChart\" width=\"1400\" height=\"200\"></canvas>\n    </div>\n\n    <h3 id=\"categoryData\">カテゴリ別</h3>\n    <h4>支出</h4>\n    <table class=\"categoryTable\">\n        <tr v-for=\"(eCategory, index) in eCategoryList\" :key=\"index\" :value=\"eCategory\"> \n            <th>{{ eCategory }}</th><td class=\"categoryTotal\">¥ {{ eCategoryTotals[eCategory] }}</td>\n        </tr>\n    </table>\n    <h4>収入</h4>\n    <table class=\"categoryTable\">\n        <tr v-for=\"(iCategory, index) in iCategoryList\" :key=\"index\" :value=\"iCategory\"> \n            <th>{{ iCategory }}</th><td class=\"categoryTotal\">¥ {{ iCategoryTotals[iCategory] }}</td>\n        </tr>\n    </table>\n    <div>\n        <canvas id=\"outPieChart\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Graph',\n    // props: ['oeconomicas','year_month'],\n    data () {\n        return {\n            balanceBarChart: null,\n            outPieChart: null,\n            balanceBarData: [],\n            outPieData: [],\n            inTotal: 0,\n            outTotal: 0,\n            profit: 0,\n            barData: {},\n            eCategoryList: [],\n            eCategoryTotals: {},\n            iCategoryList: [],\n            iCategoryTotals: {},\n            options: {\n                responsive: false,\n                plugins: {\n                    legend: {\n                        display: false,\n                    }\n                },\n                indexAxis: 'y',\n                maintainAspectRatio: false,\n            },\n            outPieOptions: {\n                responsive: true,\n                plugins: {\n                    legend: {\n                        position: 'top',\n                    },\n                    title: {\n                        display: true,\n                        text: '支出カテゴリ別'\n                    }\n                },\n                maintainAspectRatio: false,\n                width: 400,\n                height: 400\n            }\n        }\n    },\n    // created:function () {\n    //     console.log(this.oeconomicas);\n    //     this.calcBalance(this.oeconomicas);\n    // },\n    // mounted() {\n    //     this.createBarGraph();\n    //     // updateBarGraph(this.oeconomicas);\n    // },\n    methods: {\n        firstAction: function(data,categories){\n            this.oeconomicas = data;\n            this.eCategoryList = this.sortCategoryName(categories[0]);\n            this.eCategoryTotals = this.calcCategoryData(this.eCategoryList);\n            this.iCategoryList = this.sortCategoryName(categories[1]);\n            this.iCategoryTotals = this.calcCategoryData(this.iCategoryList);\n            console.log(this.eCategoryTotals);\n            this.updateBarGraph(this.oeconomicas);\n            this.updatePieGraph();\n        },\n        updateBarGraph: function(data) {\n            if (this.balanceBarChart) {\n                this.balanceBarChart.destroy();    // Destroy the existing chart instance\n            }\n            this.calcBalance(data);    // Recalculate amount of each balance.\n            this.createBarGraph();    // Create a new chart instance\n        },\n        updatePieGraph: function() {\n            if (this.outPieChart) {\n                this.outPieChart.destroy();    // Destroy the existing chart instance\n            }\n            this.createPieGraph();\n        },\n        calcBalance: function(data) {\n            var outAmount = 0;\n            var inAmount = 0;\n            for(var index=0; index < data.length; index++) {\n                var amount = this.replaceAmount(data[index]['amount']);\n                if ( data[index]['balance'] == \"支出\" ) {\n                    outAmount = outAmount + Number(amount);\n                } else if ( data[index]['balance'] == \"収入\" ) {\n                    inAmount = inAmount + Number(amount);\n                }\n            }\n            this.balanceBarData = [inAmount, outAmount];\n            this.setBarData();  \n\n            // 金額にカンマをつける\n            this.inTotal = this.csAmount(this.balanceBarData[0]);\n            this.outTotal = this.csAmount(this.balanceBarData[1]);\n            this.profit = this.csAmount(this.balanceBarData[0] - this.balanceBarData[1]);\n\n            // 収支計の金額のフォントの色を黒字か赤字かで変更する。\n            var objProfit = document.getElementById(\"td-profit\");\n            if ( (this.balanceBarData[0] - this.balanceBarData[1]) > 0 ) {\n                objProfit.style.color = '#0000FF'; \n            } else if ( (this.balanceBarData[0] - this.balanceBarData[1]) < 0 ) {\n                objProfit.style.color = '#FF0000';\n            }\n        },\n        setBarData: function(){\n            this.barData = {\n                labels: ['収入', '支出'],\n                datasets: [{\n                    data: this.balanceBarData,\n                    backgroundColor:['#4169e1','#f87979'],\n                }]\n            };\n        },\n        setPieData: function(){\n            this.outPieData = {\n                // labels: this.eCategoryList,\n                labels: [\"Red\", \"Blue\", \"Yellow\"],\n                datasets: [{\n                    // label: 'My First Dataset',\n                    data: [10, 20, 30],\n                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n                }]\n            }\n        },\n        createBarGraph: function() {\n            const ctx = document.getElementById('balanceBarChart').getContext('2d');\n            this.balanceBarChart = new Chart(ctx, {\n                type: 'bar',\n                data: this.barData,\n                options: this.options,\n            });\n        },\n        createPieGraph: function() {\n            const ctx = document.getElementById('outPieChart').getContext('2d');\n            this.outPieChart = new Chart(ctx2, {\n                type: 'pie',\n                data: this.outPieData,\n                options: this.outPieOptions,\n            });\n        },\n        csAmount: function(amount) {\n            return amount.toLocaleString();\n        },\n        replaceAmount: function(amount) {\n            // 1,000のようにカンマがある状態でも変更できるようにする関数\n            if ( amount.match(/,/)) {\n                amount = amount.replace(\",\", \"\");\n            } \n            return amount;\n        },\n        sortCategoryName: function(Categories) {\n            // 登録されているカテゴリを抽出\n            var categoryArray = [];\n            for(var i=0; i < this.oeconomicas.length; i++) {\n                categoryArray.push(this.oeconomicas[i]['category']);\n            }\n            // 重複排除\n            const categoryList = Array.from(new Set(categoryArray));\n            // ソート\n            var categoryList2 = [];\n            for(var index=0; index < Categories.length; index++) {\n                for(var j=0; j < categoryList.length; j++) {\n                    if ( Categories[index] == categoryList[j] ) {\n                        categoryList2.push(categoryList[j]);\n                    }\n                }\n            }\n            return categoryList2;\n        },\n        calcCategoryData: function(categoryList) {\n            var categoryTotals = {};\n            // オブジェクトにプロパティを追加,初期化\n            for(var i=0; i < categoryList.length; i++) {\n                categoryTotals[categoryList[i]] = \"\";\n            }\n            // カテゴリ別の金額合計を算出\n            for(const category in categoryTotals) {\n                var total = 0;\n                for(var j=0; j < this.oeconomicas.length; j++) {\n                    if ( category == this.oeconomicas[j]['category'] ) {\n                        var amount = this.replaceAmount(this.oeconomicas[j]['amount']);\n                        total = total + Number(amount);\n                    }\n                }\n                categoryTotals[category] = this.csAmount(total);\n            }\n            return categoryTotals;\n        }\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}