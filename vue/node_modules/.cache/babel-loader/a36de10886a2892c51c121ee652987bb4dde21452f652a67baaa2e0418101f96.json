{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelText as _vModelText, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"YearSummary\"\n}, \"サブスク\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"subscriptionTable\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"支払日\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"カテゴリ\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"サービス名\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"金額\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"display\": \"none\",\n    \"background\": \"#EEEEEE\"\n  }\n}, \"dummy\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  id: \"inputRow\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", null, \"-選択してください-\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tr\", _hoisted_4, [_createElementVNode(\"td\", null, [_createTextVNode(\" 毎月 \"), _withDirectives(_createElementVNode(\"select\", {\n    name: \"daySelect\",\n    id: \"daySelect\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.day = $event)\n  }, [_hoisted_5, (_openBlock(), _createElementBlock(_Fragment, null, _renderList(31, mm => {\n    return _createElementVNode(\"option\", null, _toDisplayString(mm), 1 /* TEXT */);\n  }), 64 /* STABLE_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.day]]), _createTextVNode(\" 日\")]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.category = $event)\n  }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.expenceCategories, (cg, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: cg\n    }, _toDisplayString(cg), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.category]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.subscription = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.amount = $event),\n    style: {\n      \"width\": \"40%\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.amount]]), _createTextVNode(\"円\")]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    class: \"add-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.registSubscription && $options.registSubscription(...args))\n  }, \"＋\"), _createCommentVNode(\" The + button \")])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subscriptions, (subscription, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: $data.subscriptions.id\n    }, [_createElementVNode(\"td\", null, \"毎月 \" + _toDisplayString(subscription.day) + \" 日\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscription.category), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscription.subscription), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(subscription.amount) + \" 円\", 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"del-button\",\n      onClick: $event => $options.deleteSubscription(subscription.id, index)\n    }, \"ー\", 8 /* PROPS */, _hoisted_8), _createCommentVNode(\" The + button \")])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","class","style","value","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","name","$data","day","$event","_hoisted_5","_createElementBlock","_Fragment","_renderList","mm","_toDisplayString","category","_hoisted_6","expenceCategories","cg","index","key","_hoisted_7","type","subscription","amount","onClick","_cache","args","$options","registSubscription","_createCommentVNode","subscriptions","deleteSubscription","_hoisted_8"],"sources":["/app/src/components/Option.vue"],"sourcesContent":["<template>\n    <h3 id=\"YearSummary\">サブスク</h3>\n    <table class=\"subscriptionTable\">\n        <tr>\n            <th>支払日</th>\n            <th>カテゴリ</th>\n            <th>サービス名</th>\n            <th>金額</th>\n            <th style=\"display:none;background:#EEEEEE\">dummy</th>\n        </tr>\n        <tr id=\"inputRow\">\n            <td>\n                毎月\n                <select name=\"daySelect\" id=\"daySelect\" v-model=\"day\">\n                    <option value=\"\"></option>\n                    <option v-for=\"mm in 31\">{{ mm }}</option>\n                </select>\n                日</td>\n            <td>\n                <select v-model=\"category\">\n                    <option>-選択してください-</option>                            \n                    <option v-for=\"(cg, index) in expenceCategories\" :key=\"index\" v-bind:value=\"cg\">{{ cg }}</option>\n                </select>\n            </td>\n            <td><input type=\"text\" v-model=\"subscription\"/></td>\n            <td><input type=\"number\" v-model=\"amount\" style=\"width: 40%;\"/>円</td>\n            <td>\n                <button class=\"add-button\" @click=\"registSubscription\">＋</button> <!-- The + button -->\n            </td>\n        </tr>\n        <tr v-for=\"(subscription, index) in subscriptions\" :key=\"subscriptions.id\">\n            <td>毎月 {{ subscription.day }} 日</td>\n            <td>{{ subscription.category }}</td>\n            <td>{{ subscription.subscription }}</td>\n            <td>{{ subscription.amount }} 円</td>\n            <td>\n                <button class=\"del-button\" @click=\"deleteSubscription(subscription.id, index)\">ー</button> <!-- The + button -->\n            </td>\n        </tr>\n    </table>\n\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Option',\n    data () {   \n        return {\n            category: \"-選択してください-\" ,\n            expenceCategories: [\"食費\",\"酒代\",\"日用品\",\"交際費\",\"交通費\",\"美容費\",\"衣服費\",\"医療費\",\"書籍\",\"サブスク\",\"家賃\",\"水道光熱費\",\"通信費\",\"税金\",\"家具・家電\",\"サウナ・銭湯\",\"車代\",\"旅行\",\"その他\"],\n            subscriptions: [],\n            day:\"\",\n            category:\"\",\n            subscription:\"\",\n            amount:\"\",\n        }\n    },\n    methods: {\n        getSubscriptions: async function() {\n            try {\n                const result = await axios.get(\"/subscription/\");\n                this.subscriptions = result.data;\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        registSubscription: async function () {\n            try {\n                if(this.day != \"\" && this.category != \"\" && this.subscription != \"\" && this.amount != \"\"){\n                    const result = await axios.post(\"/subscription/\", {\n                        day: this.day,\n                        category: this.category,\n                        subscription: this.subscription,\n                        amount: this.amount,\n                    });\n                    this.subscriptions.push(result.data); //配列の末尾に要素追加\n                    this.subscriptions.sort((a, b) => a.day - b.day); //日付順にソート\n                    // 入力欄を空にする\n                    this.day = \"\";\n                    this.category = \"\";\n                    this.subscription = \"\";\n                    this.amount = \"\";\n                }\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        deleteSubscription: async function (id, index) {\n            try {\n                await axios.delete(\"/subscription/\" + id);\n                this.subscriptions.splice(index, 1);\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        \n        \n    },\n}\n\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}