{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'Option',\n  data() {\n    return {\n      category: \"-選択してください-\",\n      income: \"収入\",\n      expence: \"支出\",\n      incomeCategories: [],\n      expenceCategories: [],\n      subscriptions: [],\n      day: \"\",\n      subscription: \"\",\n      amount: \"\"\n    };\n  },\n  methods: {\n    firstAction: function () {\n      this.getSubscriptions();\n      this.getCategories();\n    },\n    getSubscriptions: async function () {\n      try {\n        const result = await axios.get(\"/subscription/\");\n        this.subscriptions = result.data;\n      } catch (err) {\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    },\n    getCategories: async function () {\n      try {\n        let result = await axios.get(\"/category/\", {\n          params: {\n            balance: this.income\n          }\n        });\n        this.incomeCategories = result.data;\n        result = await axios.get(\"/category/\", {\n          params: {\n            balance: this.expence\n          }\n        });\n        this.expenceCategories = result.data;\n      } catch (err) {\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    },\n    registSubscription: async function () {\n      try {\n        if (this.day != \"\" && this.category != \"\" && this.subscription != \"\" && this.amount != \"\") {\n          const result = await axios.post(\"/subscription/\", {\n            day: this.day,\n            category: this.category,\n            subscription: this.subscription,\n            amount: this.amount\n          });\n          this.subscriptions.push(result.data); //配列の末尾に要素追加\n          this.subscriptions.sort((a, b) => a.day - b.day); //日付順にソート\n          // 入力欄を空にする\n          this.day = \"\";\n          this.category = \"\";\n          this.subscription = \"\";\n          this.amount = \"\";\n        }\n      } catch (err) {\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    },\n    registCategory: async function () {\n      try {\n        if (this.day != \"\" && this.category != \"\" && this.subscription != \"\" && this.amount != \"\") {\n          const result = await axios.post(\"/subscription/\", {\n            day: this.day,\n            category: this.category,\n            subscription: this.subscription,\n            amount: this.amount\n          });\n          this.subscriptions.push(result.data); //配列の末尾に要素追加\n          this.subscriptions.sort((a, b) => a.day - b.day); //日付順にソート\n          // 入力欄を空にする\n          this.day = \"\";\n          this.category = \"\";\n          this.subscription = \"\";\n          this.amount = \"\";\n        }\n      } catch (err) {\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    },\n    deleteSubscription: async function (id, index) {\n      try {\n        await axios.delete(\"/subscription/\" + id);\n        this.subscriptions.splice(index, 1);\n      } catch (err) {\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    },\n    registCategory: async function () {}\n  }\n};","map":{"version":3,"names":["axios","Chart","registerables","register","name","data","category","income","expence","incomeCategories","expenceCategories","subscriptions","day","subscription","amount","methods","firstAction","getSubscriptions","getCategories","result","get","err","console","log","alert","JSON","stringify","params","balance","registSubscription","post","push","sort","a","b","registCategory","deleteSubscription","id","index","delete","splice"],"sources":["/app/src/components/Option.vue"],"sourcesContent":["<template>\n    <h3>サブスク</h3>\n    <table class=\"subscriptionTable\">\n        <tr>\n            <th>支払日</th>\n            <th>カテゴリ</th>\n            <th>サービス名</th>\n            <th>金額</th>\n            <th style=\"display:none;background:#EEEEEE\">dummy</th>\n        </tr>\n        <tr id=\"inputRow\">\n            <td>\n                毎月\n                <select name=\"daySelect\" id=\"daySelect\" v-model=\"day\">\n                    <option value=\"\"></option>\n                    <option v-for=\"mm in 31\">{{ mm }}</option>\n                </select>\n                日</td>\n            <td>\n                <select v-model=\"category\">\n                    <option>-選択してください-</option>                            \n                    <option v-for=\"(cg, index) in expenceCategories\" :key=\"index\" v-bind:value=\"cg\">{{ cg }}</option>\n                </select>\n            </td>\n            <td><input type=\"text\" v-model=\"subscription\"/></td>\n            <td><input type=\"number\" v-model=\"amount\" style=\"width: 40%;\"/>円</td>\n            <td>\n                <button class=\"add-button\" @click=\"registSubscription\">＋</button> <!-- The + button -->\n            </td>\n        </tr>\n        <tr v-for=\"(subscription, index) in subscriptions\" :key=\"subscription.id\">\n            <td>毎月 {{ subscription.day }} 日</td>\n            <td>{{ subscription.category }}</td>\n            <td>{{ subscription.subscription }}</td>\n            <td>{{ subscription.amount }} 円</td>\n            <td>\n                <button class=\"del-button\" @click=\"deleteSubscription(subscription.id, index)\">ー</button> <!-- The + button -->\n            </td>\n        </tr>\n    </table>\n\n    <h3>カテゴリー</h3>\n    <table class=\"categoryAddTable\">\n        <!-- <tr>\n            <th>カテゴリ</th>\n            <th>収支</th>\n            <th style=\"display:none;background:#EEEEEE\">dummy</th>\n        </tr> -->\n        <tr id=\"inputRow\">\n            <td><input type=\"text\" v-model=\"subscription\" placeholder=\"カテゴリを入力\"/></td>\n            <td>\n                <select v-model=\"category\">\n                    <option>-選択してください-</option>                            \n                    <option>支出</option>\n                    <option>収入</option>\n                </select>\n            </td>\n            <td>\n                <button class=\"add-button\" @click=\"registCategory\">＋</button> <!-- The + button -->\n            </td>\n        </tr>\n    </table>\n    \n\n    <div class=\"balanceTable-container\">\n      <table>\n        <thead>\n          <tr class=\"IncomeTable\">\n            <th>{{ income }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(incomeCategory, index) in incomeCategories\" :key=\"incomeCategory.id\">\n            <td>{{ incomeCategory.category }}</td>\n            <td><button class=\"del-button\" @click=\"deleteCategory(incomeCategory.id, index)\">ー</button></td>\n          </tr>\n          <!-- <tr>\n            <td>投資収入</td>\n            <td><button class=\"del-button\" @click=\"deleteSubscription(subscription.id, index)\">ー</button></td>\n          </tr> -->\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr class=\"expenceTable\">\n            <th>{{ expence }}</th>\n          </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(expenceCategory, index) in expenceCategories\" :key=\"expenceCategory.id\">\n                <td>{{ expenceCategory.category }}</td>\n            <td><button class=\"del-button\" @click=\"deleteCategory(expenceCategory.id, index)\">ー</button></td>\n          </tr>\n          <!-- <tr>\n            <td>食費</td>\n            <td><button class=\"del-button\" @click=\"deleteSubscription(subscription.id, index)\">ー</button></td>\n          </tr>\n          <tr>\n            <td>日用品</td>\n            <td><button class=\"del-button\" @click=\"deleteSubscription(subscription.id, index)\">ー</button></td>\n          </tr> -->\n        </tbody>\n      </table>\n    </div>\n\n\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Option',\n    data () {   \n        return {\n            category: \"-選択してください-\" ,\n            income:\"収入\",\n            expence:\"支出\",\n            incomeCategories:[],\n            expenceCategories: [],\n            subscriptions: [],\n            day:\"\",\n            subscription:\"\",\n            amount:\"\",\n        }\n    },\n    methods: {\n        firstAction: function(){\n            this.getSubscriptions();\n            this.getCategories();\n\n        },\n        getSubscriptions: async function() {\n            try {\n                const result = await axios.get(\"/subscription/\");\n                this.subscriptions = result.data;\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        getCategories: async function() {\n            try {\n                let result = await axios.get(\"/category/\",{\n                    params: {\n                        balance: this.income\n                    }\n                });\n                this.incomeCategories = result.data;\n                result = await axios.get(\"/category/\",{\n                    params: {\n                        balance: this.expence\n                    }\n                });\n                this.expenceCategories = result.data;\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        registSubscription: async function () {\n            try {\n                if(this.day != \"\" && this.category != \"\" && this.subscription != \"\" && this.amount != \"\"){\n                    const result = await axios.post(\"/subscription/\", {\n                        day: this.day,\n                        category: this.category,\n                        subscription: this.subscription,\n                        amount: this.amount,\n                    });\n                    this.subscriptions.push(result.data); //配列の末尾に要素追加\n                    this.subscriptions.sort((a, b) => a.day - b.day); //日付順にソート\n                    // 入力欄を空にする\n                    this.day = \"\";\n                    this.category = \"\";\n                    this.subscription = \"\";\n                    this.amount = \"\";\n                }\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        registCategory: async function () {\n            try {\n                if(this.day != \"\" && this.category != \"\" && this.subscription != \"\" && this.amount != \"\"){\n                    const result = await axios.post(\"/subscription/\", {\n                        day: this.day,\n                        category: this.category,\n                        subscription: this.subscription,\n                        amount: this.amount,\n                    });\n                    this.subscriptions.push(result.data); //配列の末尾に要素追加\n                    this.subscriptions.sort((a, b) => a.day - b.day); //日付順にソート\n                    // 入力欄を空にする\n                    this.day = \"\";\n                    this.category = \"\";\n                    this.subscription = \"\";\n                    this.amount = \"\";\n                }\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        deleteSubscription: async function (id, index) {\n            try {\n                await axios.delete(\"/subscription/\" + id);\n                this.subscriptions.splice(index, 1);\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        registCategory: async function (){\n\n        },\n        \n    },\n}\n\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}