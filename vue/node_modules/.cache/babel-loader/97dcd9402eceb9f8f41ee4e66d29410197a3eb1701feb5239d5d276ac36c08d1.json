{"ast":null,"code":"import axios from \"axios\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'YearTable',\n  data() {\n    return {\n      YearDatas: [],\n      incomeCategories: [],\n      expenceCategories: [],\n      inYearDataObj: this.initializeData(\"in\"),\n      outYearDataObj: this.initializeData(\"out\")\n    };\n  },\n  methods: {\n    initializeData: function (strFlag) {\n      let data = {};\n      let CategoryList = [];\n      if (strFlag == \"in\") {\n        CategoryList = [\"給与\", \"投資収入\", \"その他\"];\n      } else if (strFlag == \"out\") {\n        CategoryList = [\"食費\", \"酒代\", \"日用品\", \"交際費\", \"交通費\", \"美容費\", \"衣服費\", \"医療費\", \"書籍\", \"サブスク\", \"家賃\", \"水道光熱費\", \"通信費\", \"税金\", \"家具・家電\", \"サウナ・銭湯\", \"車代\", \"旅行\", \"その他\"];\n      }\n      for (let i = 1; i <= 12; i++) {\n        data[i] = {};\n        for (let category of CategoryList) {\n          data[i][category] = 0;\n        }\n      }\n      return data;\n    },\n    setCategories: function (incomeCategories, expenceCategories) {\n      this.incomeCategories = incomeCategories;\n      this.expenceCategories = expenceCategories;\n    },\n    getYearDatas: async function (yyyy) {\n      try {\n        const result = await axios.get(\"/oeconomica/Yeardatas\", {\n          params: {\n            year: yyyy\n          }\n        });\n        this.inYearDataObj = makeYearDatas(result.data, this.incomeCategories, \"収入\");\n        this.outYearDataObj = makeYearDatas(result.data, this.expenceCategories, \"支出\");\n        console.log(this.inYearDataObj);\n      } catch (err) {\n        console.log(\"error catch\");\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Chart","registerables","register","name","data","YearDatas","incomeCategories","expenceCategories","inYearDataObj","initializeData","outYearDataObj","methods","strFlag","CategoryList","i","category","setCategories","getYearDatas","yyyy","result","get","params","year","makeYearDatas","console","log","err","alert","JSON","stringify"],"sources":["/app/src/components/YearTable.vue"],"sourcesContent":["<template>\n    <h3 id=\"YearTableIn\">年間収入内訳</h3>\n\n    <table id=\"inYearTable\" v-if=\"inYearDataObj\">\n    <thead>\n        <tr>\n            <td class=\"non\"></td>\n            <th v-for=\"mm in 12\">{{ mm }}月</th>\n            <th scope=\"col\">計</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"iCategory in incomeCategories\">\n            <th>{{ iCategory }}</th>\n            <td v-for=\"mm in 12\" class=\"incomeAll\">{{ inYearDataObj[mm][iCategory] }}</td>\n            <td class=\"incomeAll\"></td>\n        </tr>\n    </tbody>\n    </table>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'YearTable',\n    data () {\n        return {\n            YearDatas: [],\n            incomeCategories: [],\n            expenceCategories: [],\n            inYearDataObj: this.initializeData(\"in\"),\n            outYearDataObj: this.initializeData(\"out\"),\n\n        }\n    },\n    methods: {\n        initializeData: function(strFlag) {\n            let data = {};\n            let CategoryList = [];\n            if (strFlag == \"in\"){\n                CategoryList = [\"給与\", \"投資収入\",\"その他\"];\n            } else if (strFlag == \"out\"){\n                CategoryList = [\"食費\",\"酒代\",\"日用品\",\"交際費\",\"交通費\",\"美容費\",\"衣服費\",\"医療費\",\"書籍\",\"サブスク\",\"家賃\",\"水道光熱費\",\"通信費\",\"税金\",\"家具・家電\",\"サウナ・銭湯\",\"車代\",\"旅行\",\"その他\"];\n            }\n            for (let i = 1; i <= 12; i++) {\n                data[i] = {};\n                for (let category of CategoryList) {\n                    data[i][category] = 0;\n                }\n            }\n            return data;\n        },\n        setCategories: function(incomeCategories,expenceCategories){\n            this.incomeCategories = incomeCategories;\n            this.expenceCategories = expenceCategories;\n        },\n        getYearDatas: async function(yyyy) {\n            try {\n                const result = await axios.get(\"/oeconomica/Yeardatas\",{\n                    params: {\n                        year: yyyy\n                    }\n                });\n                this.inYearDataObj = makeYearDatas(result.data,this.incomeCategories,\"収入\");\n                this.outYearDataObj = makeYearDatas(result.data,this.expenceCategories,\"支出\");\n                console.log(this.inYearDataObj);\n            } catch (err) {\n                console.log(\"error catch\");\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        \n        \n    },\n}\n\n</script>"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAK,EAAEC,aAAY,QAAS,UAAU;AAC/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAChC,eAAe;EACXE,IAAI,EAAE,WAAW;EACjBC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,gBAAgB,EAAE,EAAE;MACpBC,iBAAiB,EAAE,EAAE;MACrBC,aAAa,EAAE,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC;MACxCC,cAAc,EAAE,IAAI,CAACD,cAAc,CAAC,KAAK;IAE7C;EACJ,CAAC;EACDE,OAAO,EAAE;IACLF,cAAc,EAAE,SAAAA,CAASG,OAAO,EAAE;MAC9B,IAAIR,IAAG,GAAI,CAAC,CAAC;MACb,IAAIS,YAAW,GAAI,EAAE;MACrB,IAAID,OAAM,IAAK,IAAI,EAAC;QAChBC,YAAW,GAAI,CAAC,IAAI,EAAE,MAAM,EAAC,KAAK,CAAC;MACvC,OAAO,IAAID,OAAM,IAAK,KAAK,EAAC;QACxBC,YAAW,GAAI,CAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,KAAK,EAAC,IAAI,EAAC,OAAO,EAAC,QAAQ,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,CAAC;MACvI;MACA,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAK,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC1BV,IAAI,CAACU,CAAC,IAAI,CAAC,CAAC;QACZ,KAAK,IAAIC,QAAO,IAAKF,YAAY,EAAE;UAC/BT,IAAI,CAACU,CAAC,CAAC,CAACC,QAAQ,IAAI,CAAC;QACzB;MACJ;MACA,OAAOX,IAAI;IACf,CAAC;IACDY,aAAa,EAAE,SAAAA,CAASV,gBAAgB,EAACC,iBAAiB,EAAC;MACvD,IAAI,CAACD,gBAAe,GAAIA,gBAAgB;MACxC,IAAI,CAACC,iBAAgB,GAAIA,iBAAiB;IAC9C,CAAC;IACDU,YAAY,EAAE,eAAAA,CAAeC,IAAI,EAAE;MAC/B,IAAI;QACA,MAAMC,MAAK,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAAC,uBAAuB,EAAC;UACnDC,MAAM,EAAE;YACJC,IAAI,EAAEJ;UACV;QACJ,CAAC,CAAC;QACF,IAAI,CAACV,aAAY,GAAIe,aAAa,CAACJ,MAAM,CAACf,IAAI,EAAC,IAAI,CAACE,gBAAgB,EAAC,IAAI,CAAC;QAC1E,IAAI,CAACI,cAAa,GAAIa,aAAa,CAACJ,MAAM,CAACf,IAAI,EAAC,IAAI,CAACG,iBAAiB,EAAC,IAAI,CAAC;QAC5EiB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,aAAa,CAAC;MACnC,EAAE,OAAOkB,GAAG,EAAE;QACVF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1BD,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;QAChBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC,CAAC;MAC9B;IACJ;EAGJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}