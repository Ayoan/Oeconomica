{"ast":null,"code":"import axios from \"axios\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'YearTable',\n  data() {\n    return {\n      YearDatas: [],\n      incomeCategories: [],\n      expenceCategories: [],\n      inYearDataObj: {},\n      outYearDataObj: {}\n    };\n  },\n  methods: {\n    getYearDatas: async function (yyyy) {\n      try {\n        const result = await axios.get(\"/oeconomica/Yeardatas\", {\n          params: {\n            year: yyyy\n          }\n        });\n        this.inYearDataObj = makeYearDatas(result.data, this.incomeCategories, \"収入\");\n        this.outYearDataObj = makeYearDatas(result.data, this.expenceCategories, \"支出\");\n        console.log(this.inYearDataObj);\n      } catch (err) {\n        console.log(\"error catch\");\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    },\n    setCategories: function (incomeCategories, expenceCategories) {\n      this.incomeCategories = incomeCategories;\n      this.expenceCategories = expenceCategories;\n    }\n  }\n};","map":{"version":3,"names":["axios","Chart","registerables","register","name","data","YearDatas","incomeCategories","expenceCategories","inYearDataObj","outYearDataObj","methods","getYearDatas","yyyy","result","get","params","year","makeYearDatas","console","log","err","alert","JSON","stringify","setCategories"],"sources":["/app/src/components/YearTable.vue"],"sourcesContent":["<template>\n    <h3 id=\"YearTableIn\">年間収入内訳</h3>\n\n    <table id=\"inYearTable\">\n    <thead>\n        <tr>\n            <td class=\"non\"></td>\n            <th v-for=\"mm in 12\">{{ mm }}月</th>\n            <th scope=\"col\">計</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"iCategory in incomeCategories\">\n            <th>{{ iCategory }}</th>\n            <td v-for=\"mm2 in 12\" class=\"incomeAll\">{{ inYearDataObj[mm2][iCategory] }}</td>\n            <td class=\"incomeAll\"></td>\n            <!-- <td data-label=\"Jan\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Feb\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Mar\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Apr\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"May\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Jun\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Jul\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Aug\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Sep\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Oct\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Nov\" class=\"incomeAll\">3,000</td>\n            <td data-label=\"Dec\" class=\"incomeAll\">3,000</td> -->\n        </tr>\n    </tbody>\n    </table>\n    <p v-for=\"mm in 12\">{{ inYearDataObj[mm] }}</p>\n\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'YearTable',\n    data () {\n        return {\n            YearDatas: [],\n            incomeCategories: [],\n            expenceCategories: [],\n            inYearDataObj: {},\n            outYearDataObj: {},\n\n        }\n    },\n    methods: {\n        getYearDatas: async function(yyyy) {\n            try {\n                const result = await axios.get(\"/oeconomica/Yeardatas\",{\n                    params: {\n                        year: yyyy\n                    }\n                });\n                this.inYearDataObj = makeYearDatas(result.data,this.incomeCategories,\"収入\");\n                this.outYearDataObj = makeYearDatas(result.data,this.expenceCategories,\"支出\");\n                console.log(this.inYearDataObj);\n            } catch (err) {\n                console.log(\"error catch\");\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        setCategories: function(incomeCategories,expenceCategories){\n            this.incomeCategories = incomeCategories;\n            this.expenceCategories = expenceCategories;\n        }\n    },\n}\n\n</script>"],"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAK,EAAEC,aAAY,QAAS,UAAU;AAC/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAChC,eAAe;EACXE,IAAI,EAAE,WAAW;EACjBC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,gBAAgB,EAAE,EAAE;MACpBC,iBAAiB,EAAE,EAAE;MACrBC,aAAa,EAAE,CAAC,CAAC;MACjBC,cAAc,EAAE,CAAC;IAErB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,YAAY,EAAE,eAAAA,CAAeC,IAAI,EAAE;MAC/B,IAAI;QACA,MAAMC,MAAK,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,uBAAuB,EAAC;UACnDC,MAAM,EAAE;YACJC,IAAI,EAAEJ;UACV;QACJ,CAAC,CAAC;QACF,IAAI,CAACJ,aAAY,GAAIS,aAAa,CAACJ,MAAM,CAACT,IAAI,EAAC,IAAI,CAACE,gBAAgB,EAAC,IAAI,CAAC;QAC1E,IAAI,CAACG,cAAa,GAAIQ,aAAa,CAACJ,MAAM,CAACT,IAAI,EAAC,IAAI,CAACG,iBAAiB,EAAC,IAAI,CAAC;QAC5EW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,aAAa,CAAC;MACnC,EAAE,OAAOY,GAAG,EAAE;QACVF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1BD,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;QAChBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC,CAAC;MAC9B;IACJ,CAAC;IACDI,aAAa,EAAE,SAAAA,CAASlB,gBAAgB,EAACC,iBAAiB,EAAC;MACvD,IAAI,CAACD,gBAAe,GAAIA,gBAAgB;MACxC,IAAI,CAACC,iBAAgB,GAAIA,iBAAiB;IAC9C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}