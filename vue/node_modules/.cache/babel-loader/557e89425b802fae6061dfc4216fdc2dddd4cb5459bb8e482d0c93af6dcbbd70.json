{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'Graph',\n  // props: ['oeconomicas','year_month'],\n  // props: ['year_month'],\n  data() {\n    return {\n      myChart: \"\",\n      balanceBarData: [],\n      barData: {},\n      options: {\n        responsive: false,\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        indexAxis: 'y',\n        maintainAspectRatio: false,\n        scales: {\n          // 軸設定\n          xAxes: [\n          // Ｘ軸設定\n          {\n            scaleLabel: {\n              // 軸ラベル\n              display: true,\n              // 表示設定\n              labelString: '横軸ラベル',\n              // ラベル\n              fontColor: \"red\",\n              // 文字の色\n              fontSize: 16 // フォントサイズ\n            },\n\n            gridLines: {\n              // 補助線\n              color: \"rgba(255, 0, 0, 0.2)\" // 補助線の色\n            },\n\n            ticks: {\n              // 目盛り\n              fontColor: \"red\",\n              // 目盛りの色\n              fontSize: 14 // フォントサイズ\n            }\n          }]\n        }\n      }\n    };\n  },\n\n  // created:function () {\n  //     console.log(this.oeconomicas);\n  //     this.calcBalance(this.oeconomicas);\n  // },\n  // mounted() {\n  //     this.createGraph();\n  //     // updateGraph(this.oeconomicas);\n  // },\n  methods: {\n    firstAction: function (data) {\n      this.oeconomicas = data;\n      this.updateGraph(this.oeconomicas);\n    },\n    calcBalance: function (data) {\n      var outTotal = 0;\n      var inTotal = 0;\n      for (var index = 0; index < data.length; index++) {\n        var amount = this.replaceAmount(data[index]['amount']);\n        if (data[index]['balance'] == \"支出\") {\n          var outTotal = outTotal + Number(amount);\n        } else if (data[index]['balance'] == \"収入\") {\n          var inTotal = inTotal + Number(amount);\n        }\n      }\n      this.balanceBarData = [inTotal, outTotal];\n      this.setBarData();\n    },\n    replaceAmount: function (amount) {\n      // 1,000のようにカンマがある状態でも変更できるようにする関数\n      if (amount.match(/,/)) {\n        var amount = amount.replace(\",\", \"\");\n      }\n      return amount;\n    },\n    setBarData: function () {\n      this.barData = {\n        labels: ['収入', '支出'],\n        datasets: [{\n          // label: ['yen'],\n          data: this.balanceBarData,\n          backgroundColor: ['#4169e1', '#f87979']\n          // backgroundColor: '#f87979'\n        }]\n      };\n    },\n\n    createGraph: function () {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      this.myChart = new Chart(ctx, {\n        type: 'bar',\n        data: this.barData,\n        options: this.options\n      });\n    },\n    updateGraph: function (data) {\n      if (this.myChart) {\n        // Destroy the existing chart instance\n        this.myChart.destroy();\n      }\n      // Recalculate amount of each balance.\n      this.calcBalance(data);\n      // Create a new chart instance\n      this.createGraph();\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","name","data","myChart","balanceBarData","barData","options","responsive","plugins","legend","display","indexAxis","maintainAspectRatio","scales","xAxes","scaleLabel","labelString","fontColor","fontSize","gridLines","color","ticks","methods","firstAction","oeconomicas","updateGraph","calcBalance","outTotal","inTotal","index","length","amount","replaceAmount","Number","setBarData","match","replace","labels","datasets","backgroundColor","createGraph","ctx","document","getElementById","getContext","type","destroy"],"sources":["/app/src/components/Graph.vue"],"sourcesContent":["<template>\n    <h3 id=\"balanceBar\">収支データ</h3>\n    <!-- <section id=\"balanceTable\"> -->\n        <table class=\"balanceTable\">\n            <tr><th>収入計</th><td>¥ {{ balanceBarData[0] }}</td></tr>\n            <tr><th>支出計</th><td>¥ {{ balanceBarData[1] }}</td></tr>\n            <tr><th>収支計</th><td>¥ {{ balanceBarData[0] - balanceBarData[1] }}</td></tr>\n        </table>\n    <!-- </section> -->\n    <div>\n        <canvas id=\"myChart\" width=\"1200\" height=\"200\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Graph',\n    // props: ['oeconomicas','year_month'],\n    // props: ['year_month'],\n    data () {\n        return {\n            myChart:\"\",\n            balanceBarData: [],\n            barData: {},\n            options: {\n                responsive: false,\n                plugins: {\n                    legend: {\n                        display: false\n                    }\n                },\n                indexAxis: 'y',\n                maintainAspectRatio: false,\n                scales: {                          // 軸設定\n                    xAxes: [                           // Ｘ軸設定\n                        {\n                            scaleLabel: {                 // 軸ラベル\n                                display: true,                // 表示設定\n                                labelString: '横軸ラベル',    // ラベル\n                                fontColor: \"red\",             // 文字の色\n                                fontSize: 16                  // フォントサイズ\n                            },\n                            gridLines: {                   // 補助線\n                                color: \"rgba(255, 0, 0, 0.2)\", // 補助線の色\n                            },\n                            ticks: {                      // 目盛り\n                                fontColor: \"red\",             // 目盛りの色\n                                fontSize: 14                  // フォントサイズ\n                            }\n                        }\n                    ],\n                }\n            },    \n        }\n    },\n    // created:function () {\n    //     console.log(this.oeconomicas);\n    //     this.calcBalance(this.oeconomicas);\n    // },\n    // mounted() {\n    //     this.createGraph();\n    //     // updateGraph(this.oeconomicas);\n    // },\n    methods: {\n        firstAction: function(data){\n            this.oeconomicas = data;\n            this.updateGraph(this.oeconomicas);\n        },\n        calcBalance: function(data) {\n            var outTotal = 0;\n            var inTotal = 0;\n            for(var index=0; index < data.length; index++) {\n                var amount = this.replaceAmount(data[index]['amount']);\n                if ( data[index]['balance'] == \"支出\" ) {\n                    var outTotal = outTotal + Number(amount);\n                } else if ( data[index]['balance'] == \"収入\" ) {\n                    var inTotal = inTotal + Number(amount);\n                }\n            }\n            this.balanceBarData = [inTotal, outTotal];\n            this.setBarData();  \n        },\n        replaceAmount: function(amount) {\n            // 1,000のようにカンマがある状態でも変更できるようにする関数\n            if ( amount.match(/,/)) {\n                var amount = amount.replace(\",\", \"\");\n            } \n            return amount;\n        },\n        setBarData: function(){\n            this.barData = {\n                labels: ['収入', '支出'],\n                datasets: [\n                    {\n                        // label: ['yen'],\n                        data: this.balanceBarData,\n                        backgroundColor:['#4169e1','#f87979'],\n                        // backgroundColor: '#f87979'\n                    }\n                ]\n            }\n        },\n        createGraph: function() {\n            const ctx = document.getElementById('myChart').getContext('2d');\n            this.myChart = new Chart(ctx, {\n                type: 'bar',\n                data: this.barData,\n                options: this.options,\n            });\n        },\n        updateGraph: function(data) {\n            if (this.myChart) {\n                // Destroy the existing chart instance\n                this.myChart.destroy();\n            }\n            // Recalculate amount of each balance.\n            this.calcBalance(data);\n            // Create a new chart instance\n            this.createGraph();\n        },\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}