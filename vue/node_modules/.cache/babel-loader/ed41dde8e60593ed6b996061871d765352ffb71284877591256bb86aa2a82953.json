{"ast":null,"code":"import axios from \"axios\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'YearTable',\n  data() {\n    return {\n      YearDatas: [],\n      incomeCategories: [],\n      expenceCategories: [],\n      inYearDataObj: this.initializeData(\"in\"),\n      outYearDataObj: this.initializeData(\"out\"),\n      inYearTotalObj: {},\n      outYearTotalObj: {},\n      yearProfit: 0,\n      profitRate: 0\n    };\n  },\n  methods: {\n    initializeData: function (strFlag) {\n      let data = {};\n      let CategoryList = [];\n      if (strFlag == \"in\") {\n        CategoryList = [\"給与\", \"投資収入\", \"その他\"];\n      } else if (strFlag == \"out\") {\n        CategoryList = [\"食費\", \"酒代\", \"日用品\", \"交際費\", \"交通費\", \"美容費\", \"衣服費\", \"医療費\", \"書籍\", \"サブスク\", \"家賃\", \"水道光熱費\", \"通信費\", \"税金\", \"家具・家電\", \"サウナ・銭湯\", \"車代\", \"旅行\", \"その他\"];\n      }\n      for (let i = 1; i <= 12; i++) {\n        data[i] = {};\n        for (let category of CategoryList) {\n          data[i][category] = 0;\n        }\n      }\n      return data;\n    },\n    setCategories: function (incomeCategories, expenceCategories) {\n      this.incomeCategories = incomeCategories;\n      this.expenceCategories = expenceCategories;\n    },\n    getYearDatas: async function (yyyy) {\n      try {\n        const result = await axios.get(\"/oeconomica/Yeardatas\", {\n          params: {\n            year: yyyy\n          }\n        });\n        // カテゴリ別の月間収支を算出\n        this.inYearDataObj = makeYearDatas(result.data, this.incomeCategories, \"収入\");\n        this.inYearTotalObj = calcYearTotal(this.inYearDataObj, this.incomeCategories);\n        this.outYearDataObj = makeYearDatas(result.data, this.expenceCategories, \"支出\");\n        this.outYearTotalObj = calcYearTotal(this.outYearDataObj, this.expenceCategories);\n        // 年間の収支合計\n        this.yearProfit = Number(replaceAmount(this.inYearTotalObj['total'])) - Number(replaceAmount(this.outYearTotalObj['total']));\n        // 利益率\n        this.profitRate = Math.round(this.yearProfit / Number(replaceAmount(this.inYearTotalObj['total'])) * 100);\n        this.yearProfit = csAmount(this.yearProfit);\n      } catch (err) {\n        console.log(err);\n        alert(JSON.stringify(err));\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Chart","registerables","register","name","data","YearDatas","incomeCategories","expenceCategories","inYearDataObj","initializeData","outYearDataObj","inYearTotalObj","outYearTotalObj","yearProfit","profitRate","methods","strFlag","CategoryList","i","category","setCategories","getYearDatas","yyyy","result","get","params","year","makeYearDatas","calcYearTotal","Number","replaceAmount","Math","round","csAmount","err","console","log","alert","JSON","stringify"],"sources":["/app/src/components/YearTable.vue"],"sourcesContent":["<template>\n    <h3 id=\"YearSummary\">サマリー</h3>\n    <table class=\"balanceTable\">\n        <tr><th>収入合計</th><td class=\"inTotal\">¥ {{ inYearTotalObj['total'] }}</td></tr>\n        <tr><th>支出合計</th><td class=\"outTotal\">¥ {{ outYearTotalObj['total'] }}</td></tr>\n        <tr><th>年間収支</th><td id=\"td-profit\">¥ {{ yearProfit }}</td></tr>\n        <tr><th>利益率</th><td id=\"td-profit\">{{ profitRate }}%</td></tr>\n    </table>\n\n    <h3>収入内訳</h3>\n    <table id=\"YearTable\" v-if=\"inYearDataObj\">\n    <thead>\n        <tr>\n            <td class=\"non\"></td>\n            <th v-for=\"mm in 12\">{{ mm }}月</th>\n            <th scope=\"col\">計</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"iCategory in incomeCategories\">\n            <th>{{ iCategory }}</th>\n            <td v-for=\"mm in 12\" class=\"incomeAll\">{{ inYearDataObj[mm][iCategory] }}</td>\n            <td>{{ inYearTotalObj[iCategory] }}</td>\n        </tr>\n        <tr class=\"YearTotal\">\n            <th>合計</th>\n            <td v-for=\"mm in 12\">{{ inYearDataObj[mm]['total'] }}</td>\n            <td>{{ inYearTotalObj['total'] }}</td>\n        </tr>\n    </tbody>\n    </table>\n\n    <h3>支出内訳</h3>\n    <table id=\"YearTable\" v-if=\"outYearDataObj\">\n    <thead>\n        <tr>\n            <td class=\"non\"></td>\n            <th v-for=\"mm in 12\">{{ mm }}月</th>\n            <th scope=\"col\">計</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"eCategory in expenceCategories\">\n            <th>{{ eCategory }}</th>\n            <td v-for=\"mm in 12\" class=\"outcomeAll\">{{ outYearDataObj[mm][eCategory] }}</td>\n            <td class=\"outcomeAll\">{{ outYearTotalObj[eCategory] }}</td>\n        </tr>\n        <tr class=\"YearTotal\">\n            <th>合計</th>\n            <td v-for=\"mm in 12\">{{ outYearDataObj[mm]['total'] }}</td>\n            <td>{{ outYearTotalObj['total'] }}</td>\n        </tr>\n    </tbody>\n    </table>\n    <table id=\"outRateTable\">\n        <thead>\n            <tr class=\"outRateHead\">\n                <td class=\"non\"></td>\n                <th v-for=\"mm in 13\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"outRate\">\n                <th>支出率</th>\n                <td v-for=\"mm in 13\"></td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'YearTable',\n    data () {   \n        return {\n            YearDatas: [],\n            incomeCategories: [],\n            expenceCategories: [],\n            inYearDataObj: this.initializeData(\"in\"),\n            outYearDataObj: this.initializeData(\"out\"),\n            inYearTotalObj:{},\n            outYearTotalObj:{},\n            yearProfit: 0,\n            profitRate: 0,\n        }\n    },\n    methods: {\n        initializeData: function(strFlag) {\n            let data = {};\n            let CategoryList = [];\n            if (strFlag == \"in\"){\n                CategoryList = [\"給与\", \"投資収入\",\"その他\"];\n            } else if (strFlag == \"out\"){\n                CategoryList = [\"食費\",\"酒代\",\"日用品\",\"交際費\",\"交通費\",\"美容費\",\"衣服費\",\"医療費\",\"書籍\",\"サブスク\",\"家賃\",\"水道光熱費\",\"通信費\",\"税金\",\"家具・家電\",\"サウナ・銭湯\",\"車代\",\"旅行\",\"その他\"];\n            }\n            for (let i = 1; i <= 12; i++) {\n                data[i] = {};\n                for (let category of CategoryList) {\n                    data[i][category] = 0;\n                }\n            }\n            return data;\n        },\n        setCategories: function(incomeCategories,expenceCategories){\n            this.incomeCategories = incomeCategories;\n            this.expenceCategories = expenceCategories;\n        },\n        getYearDatas: async function(yyyy) {\n            try {\n                const result = await axios.get(\"/oeconomica/Yeardatas\",{\n                    params: {\n                        year: yyyy\n                    }\n                });\n                // カテゴリ別の月間収支を算出\n                this.inYearDataObj = makeYearDatas(result.data,this.incomeCategories,\"収入\");\n                this.inYearTotalObj = calcYearTotal(this.inYearDataObj,this.incomeCategories);\n                this.outYearDataObj = makeYearDatas(result.data,this.expenceCategories,\"支出\");\n                this.outYearTotalObj = calcYearTotal(this.outYearDataObj,this.expenceCategories);\n                // 年間の収支合計\n                this.yearProfit = Number(replaceAmount(this.inYearTotalObj['total'])) - Number(replaceAmount(this.outYearTotalObj['total']));\n                // 利益率\n                this.profitRate = Math.round(this.yearProfit / Number(replaceAmount(this.inYearTotalObj['total'])) * 100);\n                this.yearProfit = csAmount(this.yearProfit);\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        \n        \n    },\n}\n\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}