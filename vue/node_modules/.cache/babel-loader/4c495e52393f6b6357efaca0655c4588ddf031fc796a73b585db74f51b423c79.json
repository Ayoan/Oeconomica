{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'Graph',\n  props: ['oeconomicas', 'year_month'],\n  data() {\n    return {\n      myChart: \"\",\n      balanceBarData: [],\n      barData: {},\n      options: {\n        responsive: false,\n        indexAxis: 'y',\n        maintainAspectRatio: false\n        // scales: {\n        //     yAxes: [{\n        //         ticks: {\n        //         beginAtZero: true,\n        //         },\n        //     }],\n        // },\n      }\n    };\n  },\n\n  created: function () {\n    this.calcBalance(this.oeconomicas);\n  },\n  mounted() {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    this.myChart = new Chart(ctx, {\n      type: 'bar',\n      data: this.barData,\n      options: this.options\n    });\n  },\n  methods: {\n    calcBalance: function (data) {\n      var outTotal = 0;\n      var inTotal = 0;\n      for (var index = 0; index < data.length; index++) {\n        var amount = this.replaceAmount(data[index]['amount']);\n        if (data[index]['balance'] == \"支出\") {\n          var outTotal = outTotal + Number(amount);\n        } else if (data[index]['balance'] == \"収入\") {\n          var inTotal = inTotal + Number(amount);\n        }\n      }\n      this.balanceBarData = [inTotal, outTotal];\n      this.setBarData();\n    },\n    replaceAmount: function (amount) {\n      // 1,000のようにカンマがある状態でも変更できるようにする関数\n      if (amount.match(/,/)) {\n        var amount = amount.replace(\",\", \"\");\n      }\n      return amount;\n    },\n    setBarData: function () {\n      this.barData = {\n        labels: ['収入', '支出'],\n        datasets: [{\n          label: 'yen',\n          data: this.balanceBarData,\n          backgroundColor: '#f87979'\n        }]\n      };\n    },\n    createGraph: function () {},\n    updateGraph: function (data) {\n      if (this.myChart) {\n        // Destroy the existing chart instance\n        this.myChart.destroy();\n      }\n      // Recalculate amount of each balance.\n      this.calcBalance(data);\n      // Create a new chart instance\n      const ctx = document.getElementById('myChart').getContext('2d');\n      this.myChart = new Chart(ctx, {\n        type: 'bar',\n        data: this.barData,\n        options: this.options\n      });\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","name","props","data","myChart","balanceBarData","barData","options","responsive","indexAxis","maintainAspectRatio","created","calcBalance","oeconomicas","mounted","ctx","document","getElementById","getContext","type","methods","outTotal","inTotal","index","length","amount","replaceAmount","Number","setBarData","match","replace","labels","datasets","label","backgroundColor","createGraph","updateGraph","destroy"],"sources":["/app/src/components/Graph.vue"],"sourcesContent":["<template>\n    <h2 id=\"balanceBar\">収支グラフ</h2>\n    <canvas id=\"myChart\" width=\"1200\" height=\"200\"></canvas>\n\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Graph',\n    props: ['oeconomicas','year_month'],\n    data () {\n        return {\n            myChart:\"\",\n            balanceBarData: [],\n            barData: {},\n            options: {\n                responsive: false,\n                indexAxis: 'y',\n                maintainAspectRatio: false,\n                // scales: {\n                //     yAxes: [{\n                //         ticks: {\n                //         beginAtZero: true,\n                //         },\n                //     }],\n                // },\n            },    \n        }\n    },\n    created:function () {\n        this.calcBalance(this.oeconomicas);\n    },\n    mounted() {\n        const ctx = document.getElementById('myChart').getContext('2d');\n        this.myChart = new Chart(ctx, {\n            type: 'bar',\n            data: this.barData,\n            options: this.options,\n        });\n    },\n    methods: {\n        calcBalance: function(data) {\n            var outTotal = 0;\n            var inTotal = 0;\n            for(var index=0; index < data.length; index++) {\n                var amount = this.replaceAmount(data[index]['amount']);\n                if ( data[index]['balance'] == \"支出\" ) {\n                    var outTotal = outTotal + Number(amount);\n                } else if ( data[index]['balance'] == \"収入\" ) {\n                    var inTotal = inTotal + Number(amount);\n                }\n            }\n            this.balanceBarData = [inTotal, outTotal];\n            this.setBarData();\n        },\n        replaceAmount: function(amount) {\n            // 1,000のようにカンマがある状態でも変更できるようにする関数\n            if ( amount.match(/,/)) {\n                var amount = amount.replace(\",\", \"\");\n            } \n            return amount;\n        },\n        setBarData: function(){\n            this.barData = {\n                labels: ['収入', '支出'],\n                datasets: [\n                    {\n                        label: 'yen',\n                        data: this.balanceBarData,\n                        backgroundColor: '#f87979'\n                    }\n                ]\n            }\n        },\n        createGraph: function() {\n\n        },\n        updateGraph: function(data) {\n            if (this.myChart) {\n                // Destroy the existing chart instance\n                this.myChart.destroy();\n            }\n            // Recalculate amount of each balance.\n            this.calcBalance(data);\n            // Create a new chart instance\n            const ctx = document.getElementById('myChart').getContext('2d');\n            this.myChart = new Chart(ctx, {\n                type: 'bar',\n                data: this.barData,\n                options: this.options,\n            });\n        },\n    }\n}\n</script>"],"mappings":"AAOA,SAASA,KAAK,EAAEC,aAAY,QAAS,UAAU;AAC/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAChC,eAAe;EACXE,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,CAAC,aAAa,EAAC,YAAY,CAAC;EACnCC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,OAAO,EAAC,EAAE;MACVC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,CAAC,CAAC;MACXC,OAAO,EAAE;QACLC,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,GAAG;QACdC,mBAAmB,EAAE;QACrB;QACA;QACA;QACA;QACA;QACA;QACA;MACJ;IACJ;EACJ,CAAC;;EACDC,OAAO,EAAC,SAAAA,CAAA,EAAY;IAChB,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,WAAW,CAAC;EACtC,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,MAAMC,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;IAC/D,IAAI,CAACd,OAAM,GAAI,IAAIN,KAAK,CAACiB,GAAG,EAAE;MAC1BI,IAAI,EAAE,KAAK;MACXhB,IAAI,EAAE,IAAI,CAACG,OAAO;MAClBC,OAAO,EAAE,IAAI,CAACA;IAClB,CAAC,CAAC;EACN,CAAC;EACDa,OAAO,EAAE;IACLR,WAAW,EAAE,SAAAA,CAAST,IAAI,EAAE;MACxB,IAAIkB,QAAO,GAAI,CAAC;MAChB,IAAIC,OAAM,GAAI,CAAC;MACf,KAAI,IAAIC,KAAK,GAAC,CAAC,EAAEA,KAAI,GAAIpB,IAAI,CAACqB,MAAM,EAAED,KAAK,EAAE,EAAE;QAC3C,IAAIE,MAAK,GAAI,IAAI,CAACC,aAAa,CAACvB,IAAI,CAACoB,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAKpB,IAAI,CAACoB,KAAK,CAAC,CAAC,SAAS,KAAK,IAAG,EAAI;UAClC,IAAIF,QAAO,GAAIA,QAAO,GAAIM,MAAM,CAACF,MAAM,CAAC;QAC5C,OAAO,IAAKtB,IAAI,CAACoB,KAAK,CAAC,CAAC,SAAS,KAAK,IAAG,EAAI;UACzC,IAAID,OAAM,GAAIA,OAAM,GAAIK,MAAM,CAACF,MAAM,CAAC;QAC1C;MACJ;MACA,IAAI,CAACpB,cAAa,GAAI,CAACiB,OAAO,EAAED,QAAQ,CAAC;MACzC,IAAI,CAACO,UAAU,EAAE;IACrB,CAAC;IACDF,aAAa,EAAE,SAAAA,CAASD,MAAM,EAAE;MAC5B;MACA,IAAKA,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC,EAAE;QACpB,IAAIJ,MAAK,GAAIA,MAAM,CAACK,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;MACxC;MACA,OAAOL,MAAM;IACjB,CAAC;IACDG,UAAU,EAAE,SAAAA,CAAA,EAAU;MAClB,IAAI,CAACtB,OAAM,GAAI;QACXyB,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;QACpBC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,KAAK;UACZ9B,IAAI,EAAE,IAAI,CAACE,cAAc;UACzB6B,eAAe,EAAE;QACrB;MAER;IACJ,CAAC;IACDC,WAAW,EAAE,SAAAA,CAAA,EAAW,CAExB,CAAC;IACDC,WAAW,EAAE,SAAAA,CAASjC,IAAI,EAAE;MACxB,IAAI,IAAI,CAACC,OAAO,EAAE;QACd;QACA,IAAI,CAACA,OAAO,CAACiC,OAAO,EAAE;MAC1B;MACA;MACA,IAAI,CAACzB,WAAW,CAACT,IAAI,CAAC;MACtB;MACA,MAAMY,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MAC/D,IAAI,CAACd,OAAM,GAAI,IAAIN,KAAK,CAACiB,GAAG,EAAE;QAC1BI,IAAI,EAAE,KAAK;QACXhB,IAAI,EAAE,IAAI,CAACG,OAAO;QAClBC,OAAO,EAAE,IAAI,CAACA;MAClB,CAAC,CAAC;IACN;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}