{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"balanceBar\"\n}, \"収支データ\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"balanceTable\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"th\", null, \"収入計\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"支出計\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"現役エンジニア\")], -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"支出計\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"現役エンジニア\")], -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"myChart\",\n  width: \"1200\",\n  height: \"200\"\n})], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <section id=\\\"balanceTable\\\"> \"), _createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tr\", null, [_hoisted_3, _createElementVNode(\"td\", null, \"¥\" + _toDisplayString($data.balanceBarData[0]), 1 /* TEXT */)]), _hoisted_4, _hoisted_5]), _createCommentVNode(\" </section> \"), _hoisted_6], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","class","width","height","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","balanceBarData","_hoisted_4","_hoisted_5","_hoisted_6"],"sources":["/app/src/components/Graph.vue"],"sourcesContent":["<template>\n    <h3 id=\"balanceBar\">収支データ</h3>\n    <!-- <section id=\"balanceTable\"> -->\n        <table class=\"balanceTable\">\n            <tr><th>収入計</th><td>¥{{ balanceBarData[0] }}</td></tr>\n            <tr><th>支出計</th><td>現役エンジニア</td></tr>\n            <tr><th>支出計</th><td>現役エンジニア</td></tr>\n        </table>\n    <!-- </section> -->\n    <div>\n        <canvas id=\"myChart\" width=\"1200\" height=\"200\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Graph',\n    props: ['oeconomicas','year_month'],\n    data () {\n        return {\n            myChart:\"\",\n            balanceBarData: [],\n            barData: {},\n            options: {\n                responsive: false,\n                plugins: {\n                    legend: {\n                        display: false\n                    }\n                },\n                indexAxis: 'y',\n                maintainAspectRatio: false,\n                \n            },    \n        }\n    },\n    created:function () {\n        this.calcBalance(this.oeconomicas);\n    },\n    mounted() {\n        this.createGraph();\n    },\n    methods: {\n        calcBalance: function(data) {\n            var outTotal = 0;\n            var inTotal = 0;\n            for(var index=0; index < data.length; index++) {\n                var amount = this.replaceAmount(data[index]['amount']);\n                if ( data[index]['balance'] == \"支出\" ) {\n                    var outTotal = outTotal + Number(amount);\n                } else if ( data[index]['balance'] == \"収入\" ) {\n                    var inTotal = inTotal + Number(amount);\n                }\n            }\n            this.balanceBarData = [inTotal, outTotal];\n            this.setBarData();\n        },\n        replaceAmount: function(amount) {\n            // 1,000のようにカンマがある状態でも変更できるようにする関数\n            if ( amount.match(/,/)) {\n                var amount = amount.replace(\",\", \"\");\n            } \n            return amount;\n        },\n        setBarData: function(){\n            this.barData = {\n                labels: ['収入', '支出'],\n                datasets: [\n                    {\n                        // label: ['yen'],\n                        data: this.balanceBarData,\n                        backgroundColor:['#4169e1','#f87979'],\n                        // backgroundColor: '#f87979'\n                    }\n                ]\n            }\n        },\n        createGraph: function() {\n            const ctx = document.getElementById('myChart').getContext('2d');\n            this.myChart = new Chart(ctx, {\n                type: 'bar',\n                data: this.barData,\n                options: this.options,\n            });\n        },\n        updateGraph: function(data) {\n            if (this.myChart) {\n                // Destroy the existing chart instance\n                this.myChart.destroy();\n            }\n            // Recalculate amount of each balance.\n            this.calcBalance(data);\n            // Create a new chart instance\n            this.createGraph();\n        },\n    }\n}\n</script>"],"mappings":";gCACIA,mBAAA,CAA8B;EAA1BC,EAAE,EAAC;AAAY,GAAC,OAAK;;EAEdC,KAAK,EAAC;AAAc;gCACnBF,mBAAA,CAAY,YAAR,KAAG;gCACXA,mBAAA,CAAqC,a,aAAjCA,mBAAA,CAAY,YAAR,KAAG,G,aAAKA,mBAAA,CAAgB,YAAZ,SAAO,E;gCAC3BA,mBAAA,CAAqC,a,aAAjCA,mBAAA,CAAY,YAAR,KAAG,G,aAAKA,mBAAA,CAAgB,YAAZ,SAAO,E;gCAGnCA,mBAAA,CAEM,c,aADFA,mBAAA,CAAwD;EAAhDC,EAAE,EAAC,SAAS;EAACE,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC;;;;6DAT7CC,UAA8B,EAC9BC,mBAAA,mCAAoC,EAChCN,mBAAA,CAIQ,SAJRO,UAIQ,GAHJP,mBAAA,CAAsD,aAAlDQ,UAAY,EAAAR,mBAAA,CAAiC,YAA7B,GAAC,GAAAS,gBAAA,CAAGC,KAAA,CAAAC,cAAc,oB,GACtCC,UAAqC,EACrCC,UAAqC,C,GAE7CP,mBAAA,gBAAmB,EACnBQ,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}