[{"/app/src/main.js":"1","/app/src/App.vue":"2","/app/src/components/Oeconomica.vue":"3","/app/src/components/Graph.vue":"4","/app/public/filter.js":"5","/app/src/components/YearTable.vue":"6","/app/src/components/Option.vue":"7"},{"size":105,"mtime":1685589374400,"results":"8","hashOfConfig":"9"},{"size":405,"mtime":1685174072325,"results":"10","hashOfConfig":"9"},{"size":15924,"mtime":1688263762550,"results":"11","hashOfConfig":"9"},{"size":11911,"mtime":1687629100768,"results":"12","hashOfConfig":"9"},{"size":14711,"mtime":1685195857614,"results":"13","hashOfConfig":"9"},{"size":5280,"mtime":1687629598461,"results":"14","hashOfConfig":"9"},{"size":7926,"mtime":1687604226559,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"k215t",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":21,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":17,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":20,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"21"},"/app/src/main.js",[],[],"/app/src/App.vue",[],[],"/app/src/components/Oeconomica.vue",["36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56"],"<template>\n    <header>\n        <div id = mymoney>\n        <form name=\"login_form\">\n            <div class=\"login_form_top\">\n                <h1>Oeconomica</h1>\n                <p>Simple Account Book made by myself</p>\n            </div>\n            <div v-show=\"show == '1' || show == '2'\" class=\"tabcontent-list\">\n                <div class=\"login_form_btm\">\n                    <input type=\"month\" v-model=\"year_month\" v-on:change=\"setDateRange(year_month)\"/><br>\n                </div>\n            </div>\n            <div v-show=\"show == '3'\" class=\"tabcontent-list\">\n                <div class=\"login_form_btm\">\n                    <select v-model=\"year\" id=\"year_pulldown\" v-on:change=\"showYearDatas\">\n                        <option v-for=\"(yearSelect, index) in yearSelects\" :key=\"index\" v-bind:value=\"yearSelect\">{{ yearSelect }}</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n        <div id=\"tab-select\">\n            <div class=\"tabgroup\">\n              <ul class=\"tabnav\">\n                <li @click=\"select('1')\" v-bind:class=\"{'active': show == '1'}\">\n                    入力\n                </li>\n                <li @click=\"select('2')\" v-bind:class=\"{'active': show == '2'}\">\n                    月データ\n                </li>\n                <li @click=\"select('3')\" v-bind:class=\"{'active': show == '3'}\">\n                    年データ\n                </li>\n                <li @click=\"select('4')\" v-bind:class=\"{'active': show == '4'}\">\n                    設定\n                </li>\n              </ul>\n              <div class=\"tabcontent\">\n                <div v-show=\"show == '1'\" class=\"tabcontent-list\">\n                    <article>\n                        <!-- 入力 -->\n                        <h2 id=\"input\">入力</h2>\n                        <section id=\"inputSection\">\n                            <div>\n                                <label>収支</label>\n                                    <input type=\"radio\" value=\"支出\" v-model=\"balance\" @click=\"resetSelect\"/>支出\n                                    <input type=\"radio\" value=\"収入\" v-model=\"balance\" @click=\"resetSelect\"/>収入\n\n                                <label>日付</label>\n                                    <input type=\"date\" v-model=\"date\" v-bind:min=\"min_date\" v-bind:max=\"max_date\">\n                                <label>カテゴリ</label>\n                                <div v-if=\"balance == '支出'\" class=\"optionGroup\">\n                                    <select v-model=\"category\">\n                                        <option>-選択してください-</option>                            \n                                        <option v-for=\"(expenceCategory, index) in expenceCategories\" :key=\"expenceCategory.id\" v-bind:value=\"expenceCategory.category\">{{ expenceCategory.category }}</option>\n                                    </select>\n                                </div>\n                                <div v-else-if=\"balance == '収入'\" class=\"optionGroup\">\n                                    <select v-model=\"category\">\n                                        <option>-選択してください-</option>\n                                        <option v-for=\"(incomeCategory, index) in incomeCategories\" :key=\"incomeCategory.id\" v-bind:value=\"incomeCategory.category\">{{ incomeCategory.category }}</option>\n                                    </select>\n                                </div>\n                                \n                            </div>\n                            <div>\n                                <label>金額</label>\n                                    <input type=\"number\" placeholder=\"金額を記入\" v-model=\"amount\">円\n\n                                <label>メモ</label>\n                                <input type=\"text\" v-model=\"memo\" placeholder=\"買ったものを記入\">\n                            </div>\n                        </section>\n                        <div class=\"submit\">\n                            <input type=\"button\" value=\"登録する\" @click=\"regist\" >\n                        </div>\n                    </article>\n\n                        <!-- 入出金一覧 -->\n                        <h2 id=\"inOutList\">入出金一覧</h2>\n                        <section id=\"list\">\n                            <!-- ここに入出金一覧を表示します。 -->\n                            <table id=\"inOutTable\">\n                                <tr>\n                                    <th width=\"38\">曜日</th>\n                                    <th>日付</th>   \n                                    <th cmanFilterBtn>収支</th>\n                                    <th cmanFilterBtn>カテゴリ</th>\n                                    <th>金額(円)</th>\n                                    <th>メモ</th>\n                                    <th width=\"80\">変更</th>\n                                    <th width=\"80\">削除</th>\n                                </tr>\n                                <tr v-for=\"(oeconomica, index) in oeconomicas\" :key=\"oeconomica.id\">\n                                    <td id=\"day\">{{ oeconomica.day_of_week }}</td>\n                                    <td><input type=\"text\" v-model=\"oeconomica.date\"/></td>\n                                    <td>\n                                        <select v-model=\"oeconomica.balance\">\n                                            <option v-bind:value=\"oeconomica.balance\">{{ oeconomica.balance }}</option>\n                                            <option v-if=\"oeconomica.balance == '収入'\">支出</option>\n                                            <option v-else-if=\"oeconomica.balance == '支出'\">収入</option>\n                                        </select>\n                                    </td>\n                                    <td>\n                                        <select v-model=\"oeconomica.category\">\n                                            <option v-bind:value=\"oeconomica.category\">{{ oeconomica.category }}</option>\n                                            <option v-if=\"oeconomica.balance == '収入'\" v-for=\"(incomeCategory, index) in incomeCategories\" :key=\"incomeCategory.id\">{{ incomeCategory.category }}</option>\n                                            <option v-else-if=\"oeconomica.balance == '支出'\" v-for=\"(expenceCategory, index) in expenceCategories\" :key=\"expenceCategory.id\">{{ expenceCategory.category }}</option>\n                                        </select>\n                                    </td>\n                                    <td><input type=\"text\" v-model=\"oeconomica.amount\"/></td>\n                                    <td><input type=\"text\" v-model=\"oeconomica.memo\"/></td>\n                                    <td><input type=\"button\" value=\"change\" @click=\"changeData(oeconomica.id, index)\"/></td>\n                                    <td><input type=\"button\" value=\"delete\" @click=\"deleteData(oeconomica.id, index)\"/></td>\n                                </tr>\n                            </table>\n                        </section>  \n                </div>\n                <div v-show=\"show == '2'\" class=\"tabcontent-list\">\n                    <div class=\"graph-child\">\n                        <graph ref=\"child2\"></graph>\n                    </div>\n                </div>\n                <div v-show=\"show == '3'\" class=\"tabcontent-list\">\n                    <div class=\"yTable-child\">\n                        <YearTable ref=\"child3\"></YearTable>\n                    </div>\n                </div>\n                <div v-show=\"show == '4'\" class=\"tabcontent-list\">\n                    <div class=\"option-child\">\n                        <Option ref=\"child4\"></Option>\n                    </div>\n                </div>\n              </div>    \n            </div>\n        </div>\n    </div>\n    </header>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Graph from './Graph.vue';\nimport YearTable from './YearTable.vue';\nimport Option from './Option.vue';\nexport default {\n    name: 'MyMoney',\n    components: {\n        Graph,\n        YearTable,\n        Option,\n    },\n    data () {\n      return {\n        year: showDateJS(\"y\")+\"年\",\n        yearSelects: setYearSelects(2020,2030),\n        year_month: showDateJS(\"m\"), \n        date: showDateJS(\"d\"),\n        min_date: showDateJS(\"Min\"),\n        max_date: showDateJS(\"Max\"),\n        balance: '支出',\n        show: \"1\",\n        category: \"-選択してください-\" ,\n        incomeCategories: [],\n        expenceCategories: [],\n        amount: \"\",\n        memo: \"\",\n        oeconomicas: [],\n        subscriptions:[],\n        graphFinished: 0,\n      }\n    },\n    created: async function () {\n        try {\n            const oResult = await axios.get(\"/oeconomica/\",{\n                params: {\n                    year_month: this.year_month\n                }\n            });\n            this.oeconomicas = oResult.data;\n            this.registSubscription(); // サブスク自動登録\n            this.getCategoryDatas();\n            tFilterInit(this.oeconomicas);\n        } catch (err) {\n            console.log(err);\n            alert(JSON.stringify(err));\n        }\n    },\n    mounted(){\n        this.$refs.child2.firstAction(this.oeconomicas,[this.expenceCategories,this.incomeCategories]);\n    },\n    methods: {\n        select: function (num) {\n            if (num == 2) {\n                this.$refs.child2.firstAction(this.oeconomicas,[this.expenceCategories,this.incomeCategories]);\n            } else if(num == 3) {\n                this.$refs.child3.setCategories(this.incomeCategories,this.expenceCategories);\n                this.$refs.child3.getYearDatas(this.year.substring(0,4));\n            } else if(num == 4) {\n                this.$refs.child4.firstAction([this.incomeCategories,this.expenceCategories]);\n            }\n            this.show = num;\n        },\n        showYearDatas: function() {\n            this.$refs.child3.getYearDatas(this.year.substring(0,4));\n        },\n        resetSelect: function() {\n            this.category = \"-選択してください-\";\n        },\n        getCategoryDatas: async function() {\n            try {\n                let result = await axios.get(\"/category/\",{\n                    params: {\n                        balance: \"収入\"\n                    }\n                });\n                this.incomeCategories = result.data;\n                result = await axios.get(\"/category/\",{\n                    params: {\n                        balance: \"支出\"\n                    }\n                });\n                this.expenceCategories = result.data;\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        setDateRange: async function(year_month) {\n            try {\n                var min_date = year_month + '-01';\n                const dt = new Date();\n                var getsumatsu = new Date(dt.getFullYear(), dt.getMonth(), 0);\n                var end_date = ('00' + getsumatsu.getDate()).slice(-2);\n                var max_date = year_month + '-' + end_date;\n                this.min_date = min_date;\n                this.max_date = max_date;\n                const result = await axios.get(\"/oeconomica/\",{\n                    params: {\n                        year_month: this.year_month\n                    }\n                });\n            this.oeconomicas = result.data;\n            this.$refs.child2.firstAction(this.oeconomicas,[this.expenceCategories,this.incomeCategories]);\n            tFilterReset();\n            tFilterInit(this.oeconomicas);\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        regist: async function () {\n            try {\n                const result = await axios.post(\"/oeconomica/\", {\n                    date: this.date,\n                    balance: this.balance,\n                    category: this.category,\n                    amount: this.amount,\n                    memo: this.memo\n                });\n                this.oeconomicas.unshift(result.data); //配列の先頭に要素追加\n                this.modifyNewRecord();\n                return result;\n            } catch (err) {\n                alert(JSON.stringify(err));\n            }\n        },\n        registSubscription: async function () {\n            try {\n                const sResult = await axios.get(\"/subscription/\");\n                let result = checkSubscription(sResult.data);\n                // サブスクリプションのテーブルを更新\n                for (let subscObj of result[1]) {\n                    let id = subscObj.id;\n                    await axios.put(\"/subscription/\" + id, {\n                        payday: subscObj.payday,\n                    });\n                }\n                // 家計簿に登録する\n                for (let paidSubsription of result[0]) {\n                    this.date = paidSubsription.date;\n                    this.balance = paidSubsription.balance;\n                    this.category = paidSubsription.category;\n                    this.amount = paidSubsription.amount;\n                    this.memo = paidSubsription.memo;\n                    await this.regist();\n                }\n                this.resetInputs();\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        deleteData: async function (id, index) {\n            try {\n                await axios.delete(\"/oeconomica/\" + id);\n                this.oeconomicas.splice(index, 1);\n            } catch (err) {\n                alert(JSON.stringify(err));\n            }\n        },\n        changeData: async function (id, index) {\n            let val_date = this.oeconomicas[index]['date'];\n            let val_balance = this.oeconomicas[index]['balance'];\n            let val_category = this.oeconomicas[index]['category'];\n            let val_amount = replaceAmount(this.oeconomicas[index]['amount']);\n            let val_memo = this.oeconomicas[index]['memo'];\n            if (checkChangeParam(val_balance,val_category,this.incomeCategories,this.expenceCategories))\n                try { // データ更新\n                    await axios.put(\"/oeconomica/\" + id, {\n                        date: val_date,\n                        balance: val_balance,\n                        category: val_category,\n                        amount: val_amount,\n                        memo: val_memo\n                    });\n                    let wDay = getWDay(val_date);  // 曜日も更新する\n                    this.oeconomicas[index]['day_of_week'] = wDay;\n                    alert(\"データを変更しました\");\n                } catch (err) {\n                    alert(JSON.stringify(err));\n                }\n            else {\n                alert(JSON.stringify(val_balance + \"のカテゴリを指定してください\"));\n            }\n        },\n        modifyNewRecord: function() {\n            // 新規登録したデータの画面表記を修正する\n            var wDay = getWDay(this.date);    // 日付から曜日を特定\n            var strAmount = csAmount(this.amount);  // 金額にカンマをつける\n            // 画面反映\n            this.oeconomicas[0].day_of_week = wDay;\n            this.oeconomicas[0]['amount'] = strAmount;\n        },\n        resetInputs: function() {\n            this.date = showDateJS(\"d\");\n            this.balance = '支出';\n            this.category = \"-選択してください-\";\n            this.amount = \"\";\n            this.memo = \"\";\n        },\n    }\n}\n</script>\n<style>\nform {\n    text-align: center;\n}\n\n.login_form_btm {\n    padding: 10px 0;\n    background-color: #F7F7F7;\n    margin: 10px 0;\n}\n</style>","/app/src/components/Graph.vue",["57","58","59","60"],"<template>\n    <h3 id=\"balanceBar\">収支データ</h3>\n    <table class=\"balanceTable\">\n        <tr><th>収入計</th><td class=\"inTotal\">¥ {{ inTotal }}</td></tr>\n        <tr><th>支出計</th><td class=\"outTotal\">¥ {{ outTotal }}</td></tr>\n        <tr><th>収支計</th><td id=\"td-profit\">¥ {{ profit }}</td></tr>\n    </table>\n    <div>\n        <canvas id=\"balanceBarChart\" width=\"1400\" height=\"200\"></canvas>\n    </div>\n\n    <h3 id=\"categoryData\">カテゴリ別</h3>\n    <h4>支出</h4>\n    <table class=\"categoryTable\">\n        <tr v-for=\"(eCategory, index) in eCategoryList\" :key=\"index\" :value=\"eCategory\"> \n            <th>{{ eCategory }}</th><td class=\"categoryTotal\">¥ {{ eCategoryTotals[eCategory] }}</td>\n        </tr>\n    </table>\n    <div class=\"pChart-container\">\n        <canvas id=\"outPieChart\" class=\"pChart\"></canvas>\n    </div>\n    <h4>収入</h4>\n    <table class=\"categoryTable\">\n        <tr v-for=\"(iCategory, index) in iCategoryList\" :key=\"index\" :value=\"iCategory\"> \n            <th>{{ iCategory }}</th><td class=\"categoryTotal\">¥ {{ iCategoryTotals[iCategory] }}</td>\n        </tr>\n    </table>\n    <div class=\"pChart-container\">\n        <canvas id=\"inPieChart\" class=\"pChart\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Graph',\n    // props: ['oeconomicas','year_month'],\n    data () {\n        return {\n            balanceBarChart: null,\n            outPieChart: null,\n            balanceBarData: [],\n            inPieData: [],\n            outPieData: [],\n            inTotal: 0,\n            outTotal: 0,\n            profit: 0,\n            barData: {},\n            eCategoryList: [],\n            eCategoryTotals: {},\n            iCategoryList: [],\n            iCategoryTotals: {},\n            eCategoryColors: {},\n            iCategoryColors: {},\n            options: {\n                responsive: false,\n                plugins: {\n                    legend: {\n                        display: false,\n                    }\n                },\n                indexAxis: 'y',\n                maintainAspectRatio: false,\n            },\n            outPieOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        display: true,\n                        text: '支出カテゴリ別',\n                        // fontSize: 120,\n                    },\n                    legend: {\n                        position: 'top',\n                        display: false\n                    },\n                },\n            },\n            inPieOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        display: true,\n                        text: '収入カテゴリ別',\n                    },\n                    legend: {\n                        position: 'top',\n                        display: false\n                    },\n                },\n            }\n        }\n    },\n    methods: {\n        firstAction: function(data,categories){\n            this.oeconomicas = data;\n            this.eCategoryList = this.sortCategoryName(categories[0]);\n            this.eCategoryTotals = this.calcCategoryData(this.eCategoryList,'支出');\n            this.eCategoryColors = this.setCategoryColors(this.eCategoryList,'支出');\n            this.iCategoryList = this.sortCategoryName(categories[1]);\n            this.iCategoryTotals = this.calcCategoryData(this.iCategoryList,'収入');\n            this.iCategoryColors = this.setCategoryColors(this.iCategoryList,'収入');\n            this.updateBarGraph(this.oeconomicas);\n            this.updatePieGraph();\n        },\n        updateBarGraph: function(data) {\n            if (this.balanceBarChart) {\n                this.balanceBarChart.destroy();    // Destroy the existing chart instance\n            }\n            this.calcBalance(data);    // Recalculate amount of each balance.\n            this.createBarGraph();    // Create a new chart instance\n        },\n        updatePieGraph: function() {\n            if (this.outPieChart) {\n                this.outPieChart.destroy();    // Destroy the existing chart instance\n            }\n            if (this.inPieChart) {\n                this.inPieChart.destroy();    // Destroy the existing chart instance\n            }\n            this.setPieData();\n            this.createPieGraph();\n        },\n        calcBalance: function(data) {\n            var outAmount = 0;\n            var inAmount = 0;\n            for(var index=0; index < data.length; index++) {\n                var amount = replaceAmount(data[index]['amount']);\n                if ( data[index]['balance'] == \"支出\" ) {\n                    outAmount = outAmount + Number(amount);\n                } else if ( data[index]['balance'] == \"収入\" ) {\n                    inAmount = inAmount + Number(amount);\n                }\n            }\n            this.balanceBarData = [inAmount, outAmount];\n            this.setBarData();\n\n            // 金額にカンマをつける\n            this.inTotal = this.csAmount(this.balanceBarData[0]);\n            this.outTotal = this.csAmount(this.balanceBarData[1]);\n            this.profit = this.csAmount(this.balanceBarData[0] - this.balanceBarData[1]);\n\n            // 収支計の金額のフォントの色を黒字か赤字かで変更する。\n            var objProfit = document.getElementById(\"td-profit\");\n            if ( (this.balanceBarData[0] - this.balanceBarData[1]) > 0 ) {\n                objProfit.style.color = '#0000FF'; \n            } else if ( (this.balanceBarData[0] - this.balanceBarData[1]) < 0 ) {\n                objProfit.style.color = '#FF0000';\n            }\n        },\n        setBarData: function(){\n            this.barData = {\n                labels: ['収入', '支出'],\n                datasets: [{\n                    data: this.balanceBarData,\n                    backgroundColor:['#4169e1','#f87979'],\n                }]\n            };\n        },\n        setPieData: function(){\n            var eCategoryDatas = [];\n            var iCategoryDatas = [];\n            for(var i=0; i < this.eCategoryList.length; i++){\n                eCategoryDatas.push(replaceAmount(this.eCategoryTotals[this.eCategoryList[i]]));\n            }\n            for(i=0; i < this.iCategoryList.length; i++){\n                iCategoryDatas.push(replaceAmount(this.iCategoryTotals[this.iCategoryList[i]]));\n            }\n            this.outPieData = {\n                labels: this.eCategoryList,\n                datasets: [{\n                    data: eCategoryDatas,\n                    backgroundColor: [],\n                    // hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n                }]\n            }\n            this.inPieData = {\n                labels: this.iCategoryList,\n                datasets: [{\n                    data: iCategoryDatas,\n                    backgroundColor: [],\n                }]\n            }\n            // 色の生成\n            // const getRandomColor = () => {\n            //     const r = Math.floor(Math.random() * 256);\n            //     const g = Math.floor(Math.random() * 256);\n            //     const b = Math.floor(Math.random() * 256);\n            //     return `rgba(${r}, ${g}, ${b}, 0.8)`;\n            // };\n            // 背景色の設定\n            this.outPieData.datasets[0].backgroundColor = this.outPieData.labels.map((category) => this.eCategoryColors[category]);\n            this.inPieData.datasets[0].backgroundColor = this.inPieData.labels.map((category) => this.iCategoryColors[category]);\n            // this.outPieData.datasets[0].backgroundColor = this.outPieData.labels.map(() => getRandomColor());\n            // this.inPieData.datasets[0].backgroundColor = this.inPieData.labels.map(() => getRandomColor());\n            // console.log(this.outPieData.datasets[0].backgroundColor);\n            // console.log(this.inPieData.datasets[0].backgroundColor);\n        },\n        createBarGraph: function() {\n            const ctx = document.getElementById('balanceBarChart').getContext('2d');\n            this.balanceBarChart = new Chart(ctx, {\n                type: 'bar',\n                data: this.barData,\n                options: this.options,\n            });\n        },\n        createPieGraph: function() {\n            const ctx1 = document.getElementById('outPieChart').getContext('2d');\n            const ctx2 = document.getElementById('inPieChart').getContext('2d');\n            this.outPieChart = new Chart(ctx1, {\n                type: 'pie',\n                data: this.outPieData,\n                options: this.outPieOptions,\n            });\n            this.inPieChart = new Chart(ctx2, {\n                type: 'pie',\n                data: this.inPieData,\n                options: this.inPieOptions,\n            });\n    \n        },\n        csAmount: function(amount) {\n            return amount.toLocaleString();\n        },\n        sortCategoryName: function(Categories) {\n            // 登録されているカテゴリを抽出\n            var categoryArray = [];\n            for(var i=0; i < this.oeconomicas.length; i++) {\n                categoryArray.push(this.oeconomicas[i]['category']);\n            }\n            // 重複排除\n            const categoryList = Array.from(new Set(categoryArray));\n            // ソート\n            var categoryList2 = [];\n            for(var index=0; index < Categories.length; index++) {\n                for(var j=0; j < categoryList.length; j++) {\n                    if ( Categories[index]['category'] == categoryList[j] ) {\n                        categoryList2.push(categoryList[j]);\n                    }\n                }\n            }\n            return categoryList2;\n        },\n        calcCategoryData: function(categoryList,strBalance) {\n            var categoryTotals = {};\n            // オブジェクトにプロパティを追加,初期化\n            for(var i=0; i < categoryList.length; i++) {\n                categoryTotals[categoryList[i]] = \"\";\n            }\n            // カテゴリ別の金額合計を算出\n            for(const category in categoryTotals) {\n                var total = 0;\n                for(var j=0; j < this.oeconomicas.length; j++) {\n                    if ( category == this.oeconomicas[j]['category'] && strBalance == this.oeconomicas[j]['balance']) {\n                        var amount = replaceAmount(this.oeconomicas[j]['amount']);\n                        total = total + Number(amount);\n                    }\n                }\n                categoryTotals[category] = this.csAmount(total);\n            }\n            return categoryTotals;\n        },\n        setCategoryColors: function(categoryList,strBalance){\n            var categoryColors = {};\n            for(var i=0; i < categoryList.length; i++) {\n                categoryColors[categoryList[i]] = \"\";\n            }\n            var j = 0;\n            var colorCodes = [];\n            for(const category in categoryColors) {\n                if ( strBalance == '収入') {\n                    colorCodes = [\"rgba(0, 255, 255, 0.8)\",\"rgba(255, 235, 205, 0.8)\",\"rgba(240, 255, 240, 0.8)\"];\n                } else if ( strBalance == '支出') {\n                    colorCodes = [\"rgba(0, 128, 0, 0.8)\",\"rgba(58, 255, 86, 0.8)\",\"rgba(154, 77, 177, 0.8)\",\"rgba(77, 124, 221, 0.8)\",\"rgba(102, 65, 85, 0.8)\",\"rgba(12, 203, 195, 0.8)\",\"rgba(230, 36, 92, 0.8)\",\"rgba(187, 240, 120, 0.8)\",\"rgba(6, 186, 225, 0.8)\",\"rgba(202, 5, 7, 0.8)\",\"rgba(226, 195, 121, 0.8)\",\"rgba(113, 160, 39, 0.8)\",\"rgba(207, 183, 50, 0.8)\"];\n                }\n                categoryColors[category] = colorCodes[j];\n                j = j + 1;\n            }\n            return categoryColors;\n        }\n    }\n}\n</script>","/app/public/filter.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77"],"/app/src/components/YearTable.vue",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"<template>\n    <h3 id=\"YearSummary\">サマリー</h3>\n    <table class=\"balanceTable\">\n        <tr><th>収入合計</th><td class=\"inTotal\">¥ {{ inYearTotalObj['total'] }}</td></tr>\n        <tr><th>支出合計</th><td class=\"outTotal\">¥ {{ outYearTotalObj['total'] }}</td></tr>\n        <tr><th>年間収支</th><td id=\"td-profit\">¥ {{ yearProfit }}</td></tr>\n        <tr><th>利益率</th><td id=\"td-profit\">{{ profitRate }}%</td></tr>\n    </table>\n\n    <h3>収入内訳</h3>\n    <table id=\"YearTable\" v-if=\"inYearDataObj\">\n    <thead>\n        <tr>\n            <td class=\"non\"></td>\n            <th v-for=\"mm in 12\">{{ mm }}月</th>\n            <th scope=\"col\">計</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"iCategoryObj in incomeCategories\">\n            <th>{{ iCategoryObj.category }}</th>\n            <td v-for=\"mm in 12\" class=\"incomeAll\">{{ inYearDataObj[mm][iCategoryObj.category] }}</td>\n            <td>{{ inYearTotalObj[iCategoryObj.category] }}</td>\n        </tr>\n        <tr class=\"YearTotal\">\n            <th>合計</th>\n            <td v-for=\"mm in 12\">{{ inYearDataObj[mm]['total'] }}</td>\n            <td>{{ inYearTotalObj['total'] }}</td>\n        </tr>\n    </tbody>\n    </table>\n\n    <h3>支出内訳</h3>\n    <table id=\"YearTable\" v-if=\"outYearDataObj\">\n    <thead>\n        <tr>\n            <td class=\"non\"></td>\n            <th v-for=\"mm in 12\">{{ mm }}月</th>\n            <th scope=\"col\">計</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"eCategoryObj in expenceCategories\">\n            <th>{{ eCategoryObj.category }}</th>\n            <td v-for=\"mm in 12\" class=\"outcomeAll\">{{ outYearDataObj[mm][eCategoryObj.category] }}</td>\n            <td class=\"outcomeAll\">{{ outYearTotalObj[eCategoryObj.category] }}</td>\n        </tr>\n        <tr class=\"YearTotal\">\n            <th>合計</th>\n            <td v-for=\"mm in 12\">{{ outYearDataObj[mm]['total'] }}</td>\n            <td>{{ outYearTotalObj['total'] }}</td>\n        </tr>\n    </tbody>\n    </table>\n    <table id=\"outRateTable\">\n        <thead>\n            <tr class=\"outRateHead\">\n                <td class=\"non\"></td>\n                <th v-for=\"mm in 13\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"outRate\">\n                <th>支出率</th>\n                <td v-for=\"mm in 13\">{{ outRateObj[mm] }}</td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'YearTable',\n    data () {   \n        return {\n            YearDatas: [],\n            incomeCategories: [],\n            expenceCategories: [],\n            inYearDataObj: this.initializeData(\"in\"),\n            outYearDataObj: this.initializeData(\"out\"),\n            inYearTotalObj:{},\n            outYearTotalObj:{},\n            yearProfit: 0,\n            profitRate: 0,\n            outRateObj: {},\n        }\n    },\n    methods: {\n        initializeData: function(strFlag) {\n            let data = {};\n            let CategoryList = [];\n            if (strFlag == \"in\"){\n                CategoryList = [\"給与\", \"投資収入\",\"その他\"];\n            } else if (strFlag == \"out\"){\n                CategoryList = [\"食費\",\"酒代\",\"日用品\",\"交際費\",\"交通費\",\"美容費\",\"衣服費\",\"医療費\",\"書籍\",\"サブスク\",\"家賃\",\"水道光熱費\",\"通信費\",\"税金\",\"家具・家電\",\"サウナ・銭湯\",\"車代\",\"旅行\",\"その他\"];\n            }\n            for (let i = 1; i <= 12; i++) {\n                data[i] = {};\n                for (let category of CategoryList) {\n                    data[i][category] = 0;\n                }\n            }\n            return data;\n        },\n        setCategories: function(incomeCategories,expenceCategories){\n            this.incomeCategories = incomeCategories;\n            this.expenceCategories = expenceCategories;\n        },\n        getYearDatas: async function(yyyy) {\n            try {\n                const result = await axios.get(\"/oeconomica/Yeardatas\",{\n                    params: {\n                        year: yyyy\n                    }\n                });\n                // カテゴリ別の月間収支を算出\n                this.inYearDataObj = makeYearDatas(result.data,this.incomeCategories,\"収入\");\n                this.inYearTotalObj = calcYearTotal(this.inYearDataObj,this.incomeCategories);\n                this.outYearDataObj = makeYearDatas(result.data,this.expenceCategories,\"支出\");\n                this.outYearTotalObj = calcYearTotal(this.outYearDataObj,this.expenceCategories);\n                // 年間の収支合計\n                this.yearProfit = Number(replaceAmount(this.inYearTotalObj['total'])) - Number(replaceAmount(this.outYearTotalObj['total']));\n                // 利益率\n                this.profitRate = calcProfitRate(this.yearProfit,this.inYearTotalObj['total']);\n                this.yearProfit = csAmount(this.yearProfit);\n                // 支出率\n                this.outRateObj = calcOutRate(this.inYearDataObj,this.outYearDataObj);\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n    },\n}\n\n</script>","/app/src/components/Option.vue",["98","99"],"<template>\n    <h3>サブスク</h3>\n    <table class=\"subscriptionTable\">\n        <tr>\n            <th>支払日</th>\n            <th>カテゴリ</th>\n            <th>サービス名</th>\n            <th>金額</th>\n            <th style=\"display:none;background:#EEEEEE\">dummy</th>\n        </tr>\n        <tr id=\"inputRow\">\n            <td>\n                毎月\n                <select name=\"daySelect\" id=\"daySelect\" v-model=\"day\">\n                    <option value=\"\"></option>\n                    <option v-for=\"mm in 31\">{{ mm }}</option>\n                </select>\n                日</td>\n            <td>\n                <select v-model=\"subCategory\">\n                    <option>-選択してください-</option>                            \n                    <option v-for=\"(expenceCategory, index) in expenceCategories\" :key=\"expenceCategory.id\">{{ expenceCategory.category }}</option>\n                </select>\n            </td>\n            <td><input type=\"text\" v-model=\"subscription\"/></td>\n            <td><input type=\"number\" v-model=\"amount\" style=\"width: 40%;\"/>円</td>\n            <td>\n                <button class=\"add-button\" @click=\"registSubscription\">＋</button> <!-- The + button -->\n            </td>\n        </tr>\n        <tr v-for=\"(subscription, index) in subscriptions\" :key=\"subscription.id\">\n            <td>毎月 {{ subscription.day }} 日</td>\n            <td>{{ subscription.category }}</td>\n            <td>{{ subscription.subscription }}</td>\n            <td>{{ subscription.amount }} 円</td>\n            <td>\n                <button class=\"del-button\" @click=\"deleteSubscription(subscription.id, index)\">ー</button> <!-- The + button -->\n            </td>\n        </tr>\n    </table>\n\n    <h3>カテゴリー</h3>\n    <table class=\"categoryAddTable\">\n        <tr>\n            <td><input type=\"text\" v-model=\"category\" placeholder=\"カテゴリを入力\"/></td>\n            <td>\n                <select v-model=\"balance\">\n                    <option>-選択してください-</option>                            \n                    <option>支出</option>\n                    <option>収入</option>\n                </select>\n            </td>\n            <td>\n                <button class=\"add-button\" @click=\"registCategory\">＋</button> <!-- The + button -->\n            </td>\n        </tr>\n    </table>\n    \n\n    <div class=\"balanceTable-container\">\n      <table>\n        <thead>\n          <tr class=\"IncomeTable\">\n            <th>{{ income }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(incomeCategory, index) in incomeCategories\" :key=\"incomeCategory.id\">\n            <td>{{ incomeCategory.category }}</td>\n            <td><button class=\"del-button\" @click=\"deleteCategory(incomeCategory.id,incomeCategory.balance, index)\">ー</button></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <table>\n        <thead>\n          <tr class=\"expenceTable\">\n            <th>{{ expence }}</th>\n          </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(expenceCategory, index) in expenceCategories\" :key=\"expenceCategory.id\">\n                <td>{{ expenceCategory.category }}</td>\n                <td><button class=\"del-button\" @click=\"deleteCategory(expenceCategory.id,expenceCategory.balance, index)\">ー</button></td>\n            </tr>\n        </tbody>\n      </table>\n    </div>\n\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport { Chart, registerables } from 'chart.js'; \nChart.register(...registerables);\nexport default {\n    name: 'Option',\n    data () {   \n        return {\n            subCategory:\"-選択してください-\",\n            balance: \"-選択してください-\" ,\n            income:\"収入\",\n            expence:\"支出\",\n            incomeCategories:[],\n            expenceCategories: [],\n            subscriptions: [],\n            day:\"\",\n            subscription:\"\",\n            category:\"\",\n            amount:\"\",\n        }\n    },\n    methods: {\n        firstAction: function(){\n            this.getSubscriptions();\n            this.getCategories();\n        },\n        getSubscriptions: async function() {\n            try {\n                const result = await axios.get(\"/subscription/\");\n                this.subscriptions = result.data;\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        getCategories: async function() {\n            try {\n                let result = await axios.get(\"/category/\",{\n                    params: {\n                        balance: this.income\n                    }\n                });\n                this.incomeCategories = result.data;\n                result = await axios.get(\"/category/\",{\n                    params: {\n                        balance: this.expence\n                    }\n                });\n                this.expenceCategories = result.data;\n            } catch (err) {\n                console.log(err);\n                alert(JSON.stringify(err));\n            }\n        },\n        registSubscription: async function () {\n            try {\n                if(this.day != \"\" && this.balance != \"\"){\n                    const result = await axios.post(\"/subscription/\", {\n                        day: this.day,\n                        category: this.subCategory,\n                        subscription: this.subscription,\n                        amount: this.amount,\n                    });\n                    this.subscriptions.push(result.data); //配列の末尾に要素追加\n                    this.subscriptions.sort((a, b) => a.day - b.day); //日付順にソート\n                    // 入力欄をリセットする\n                    this.day = \"\";\n                    this.subCategory = \"-選択してください-\";\n                    this.subscription = \"\";\n                    this.amount = \"\";\n                }\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        registCategory: async function () {\n            try {\n                if(this.category != \"\" && (this.balance == \"収入\" || this.balance == \"支出\" )){\n                    console.log(\"start inserting categories\")\n                    const result = await axios.post(\"/category/\", {\n                        category: this.category,\n                        balance: this.balance\n                    });\n                    if (this.balance == \"収入\"){\n                        this.incomeCategories.push(result.data); //配列の末尾に要素追加\n                    } else if (this.balance == \"支出\"){\n                        this.expenceCategories.push(result.data); //配列の末尾に要素追加\n                    }\n                    // 入力欄をリセットする\n                    this.category = \"\";\n                    this.balance = \"-選択してください-\";\n                }\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        deleteSubscription: async function (id, index) {\n            try {\n                await axios.delete(\"/subscription/\" + id);\n                this.subscriptions.splice(index, 1);\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        deleteCategory: async function (id,balance,index) {\n            try {\n                await axios.delete(\"/category/\" + id);\n                if (balance == \"収入\"){\n                    this.incomeCategories.splice(index, 1);\n                } else if (balance == \"支出\"){\n                    this.expenceCategories.splice(index, 1);\n                }\n            } catch (err) {\n                console.log(err)\n                alert(JSON.stringify(err));\n            }\n        },\n        \n    },\n}\n\n</script>",{"ruleId":"100","severity":2,"message":"101","line":55,"column":74,"nodeType":"102","endLine":55,"endColumn":79},{"ruleId":"100","severity":2,"message":"101","line":61,"column":73,"nodeType":"102","endLine":61,"endColumn":78},{"ruleId":"103","severity":2,"message":"104","line":107,"column":53,"nodeType":"105","endLine":107,"endColumn":86},{"ruleId":"100","severity":2,"message":"101","line":107,"column":111,"nodeType":"102","endLine":107,"endColumn":116},{"ruleId":"100","severity":2,"message":"101","line":108,"column":117,"nodeType":"102","endLine":108,"endColumn":122},{"ruleId":"106","severity":2,"message":"107","line":155,"column":15,"nodeType":"102","messageId":"108","endLine":155,"endColumn":25},{"ruleId":"106","severity":2,"message":"109","line":156,"column":22,"nodeType":"102","messageId":"108","endLine":156,"endColumn":36},{"ruleId":"106","severity":2,"message":"107","line":157,"column":21,"nodeType":"102","messageId":"108","endLine":157,"endColumn":31},{"ruleId":"106","severity":2,"message":"107","line":158,"column":15,"nodeType":"102","messageId":"108","endLine":158,"endColumn":25},{"ruleId":"106","severity":2,"message":"107","line":159,"column":19,"nodeType":"102","messageId":"108","endLine":159,"endColumn":29},{"ruleId":"106","severity":2,"message":"107","line":160,"column":19,"nodeType":"102","messageId":"108","endLine":160,"endColumn":29},{"ruleId":"106","severity":2,"message":"110","line":183,"column":13,"nodeType":"102","messageId":"108","endLine":183,"endColumn":24},{"ruleId":"106","severity":2,"message":"111","line":245,"column":13,"nodeType":"102","messageId":"108","endLine":245,"endColumn":25},{"ruleId":"106","severity":2,"message":"110","line":246,"column":13,"nodeType":"102","messageId":"108","endLine":246,"endColumn":24},{"ruleId":"106","severity":2,"message":"112","line":271,"column":30,"nodeType":"102","messageId":"108","endLine":271,"endColumn":47},{"ruleId":"106","severity":2,"message":"113","line":306,"column":30,"nodeType":"102","messageId":"108","endLine":306,"endColumn":43},{"ruleId":"106","severity":2,"message":"114","line":308,"column":17,"nodeType":"102","messageId":"108","endLine":308,"endColumn":33},{"ruleId":"106","severity":2,"message":"115","line":317,"column":32,"nodeType":"102","messageId":"108","endLine":317,"endColumn":39},{"ruleId":"106","severity":2,"message":"115","line":329,"column":24,"nodeType":"102","messageId":"108","endLine":329,"endColumn":31},{"ruleId":"106","severity":2,"message":"116","line":330,"column":29,"nodeType":"102","messageId":"108","endLine":330,"endColumn":37},{"ruleId":"106","severity":2,"message":"107","line":336,"column":25,"nodeType":"102","messageId":"108","endLine":336,"endColumn":35},{"ruleId":"106","severity":2,"message":"113","line":130,"column":30,"nodeType":"102","messageId":"108","endLine":130,"endColumn":43},{"ruleId":"106","severity":2,"message":"113","line":166,"column":37,"nodeType":"102","messageId":"108","endLine":166,"endColumn":50},{"ruleId":"106","severity":2,"message":"113","line":169,"column":37,"nodeType":"102","messageId":"108","endLine":169,"endColumn":50},{"ruleId":"106","severity":2,"message":"113","line":257,"column":38,"nodeType":"102","messageId":"108","endLine":257,"endColumn":51},{"ruleId":"117","severity":2,"message":"118","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":19},{"ruleId":"121","severity":2,"message":"122","line":55,"column":12,"nodeType":"102","messageId":"123","endLine":55,"endColumn":23},{"ruleId":"121","severity":2,"message":"124","line":68,"column":8,"nodeType":"102","messageId":"123","endLine":68,"endColumn":11},{"ruleId":"125","severity":2,"message":"126","line":84,"column":34,"nodeType":"127","messageId":"128","endLine":84,"endColumn":35,"suggestions":"129"},{"ruleId":"130","severity":2,"message":"131","line":84,"column":42,"nodeType":"132","messageId":"133","endLine":85,"endColumn":6},{"ruleId":"134","severity":2,"message":"135","line":128,"column":12,"nodeType":"102","messageId":"136","endLine":128,"endColumn":13},{"ruleId":"121","severity":2,"message":"137","line":171,"column":11,"nodeType":"102","messageId":"123","endLine":171,"endColumn":23},{"ruleId":"121","severity":2,"message":"138","line":198,"column":11,"nodeType":"102","messageId":"123","endLine":198,"endColumn":24},{"ruleId":"121","severity":2,"message":"139","line":208,"column":11,"nodeType":"102","messageId":"123","endLine":208,"endColumn":20},{"ruleId":"134","severity":2,"message":"135","line":238,"column":15,"nodeType":"102","messageId":"136","endLine":238,"endColumn":16},{"ruleId":"134","severity":2,"message":"135","line":255,"column":16,"nodeType":"102","messageId":"136","endLine":255,"endColumn":17},{"ruleId":"130","severity":2,"message":"131","line":261,"column":33,"nodeType":"132","messageId":"133","endLine":262,"endColumn":13},{"ruleId":"106","severity":2,"message":"140","line":270,"column":12,"nodeType":"102","messageId":"108","endLine":270,"endColumn":15},{"ruleId":"106","severity":2,"message":"140","line":271,"column":26,"nodeType":"102","messageId":"108","endLine":271,"endColumn":29},{"ruleId":"130","severity":2,"message":"131","line":271,"column":31,"nodeType":"132","messageId":"133","endLine":272,"endColumn":13},{"ruleId":"117","severity":2,"message":"118","line":383,"column":30,"nodeType":"119","messageId":"120","endLine":383,"endColumn":31},{"ruleId":"117","severity":2,"message":"118","line":384,"column":29,"nodeType":"119","messageId":"120","endLine":384,"endColumn":30},{"ruleId":"141","severity":2,"message":"142","line":15,"column":13,"nodeType":"143","endLine":15,"endColumn":34},{"ruleId":"141","severity":2,"message":"142","line":20,"column":9,"nodeType":"143","endLine":20,"endColumn":54},{"ruleId":"141","severity":2,"message":"142","line":22,"column":13,"nodeType":"143","endLine":22,"endColumn":52},{"ruleId":"141","severity":2,"message":"142","line":27,"column":13,"nodeType":"143","endLine":27,"endColumn":34},{"ruleId":"141","severity":2,"message":"142","line":38,"column":13,"nodeType":"143","endLine":38,"endColumn":34},{"ruleId":"141","severity":2,"message":"142","line":43,"column":9,"nodeType":"143","endLine":43,"endColumn":55},{"ruleId":"141","severity":2,"message":"142","line":45,"column":13,"nodeType":"143","endLine":45,"endColumn":53},{"ruleId":"141","severity":2,"message":"142","line":50,"column":13,"nodeType":"143","endLine":50,"endColumn":34},{"ruleId":"141","severity":2,"message":"142","line":59,"column":17,"nodeType":"143","endLine":59,"endColumn":38},{"ruleId":"100","severity":2,"message":"144","line":59,"column":28,"nodeType":"102","endLine":59,"endColumn":30},{"ruleId":"141","severity":2,"message":"142","line":65,"column":17,"nodeType":"143","endLine":65,"endColumn":38},{"ruleId":"106","severity":2,"message":"145","line":121,"column":38,"nodeType":"102","messageId":"108","endLine":121,"endColumn":51},{"ruleId":"106","severity":2,"message":"146","line":122,"column":39,"nodeType":"102","messageId":"108","endLine":122,"endColumn":52},{"ruleId":"106","severity":2,"message":"145","line":123,"column":39,"nodeType":"102","messageId":"108","endLine":123,"endColumn":52},{"ruleId":"106","severity":2,"message":"146","line":124,"column":40,"nodeType":"102","messageId":"108","endLine":124,"endColumn":53},{"ruleId":"106","severity":2,"message":"113","line":126,"column":42,"nodeType":"102","messageId":"108","endLine":126,"endColumn":55},{"ruleId":"106","severity":2,"message":"113","line":126,"column":96,"nodeType":"102","messageId":"108","endLine":126,"endColumn":109},{"ruleId":"106","severity":2,"message":"147","line":128,"column":35,"nodeType":"102","messageId":"108","endLine":128,"endColumn":49},{"ruleId":"106","severity":2,"message":"116","line":129,"column":35,"nodeType":"102","messageId":"108","endLine":129,"endColumn":43},{"ruleId":"106","severity":2,"message":"148","line":131,"column":35,"nodeType":"102","messageId":"108","endLine":131,"endColumn":46},{"ruleId":"141","severity":2,"message":"142","line":16,"column":21,"nodeType":"143","endLine":16,"endColumn":46},{"ruleId":"100","severity":2,"message":"101","line":22,"column":54,"nodeType":"102","endLine":22,"endColumn":59},"vue/no-unused-vars","'index' is defined but never used.","Identifier","vue/no-use-v-if-with-v-for","This 'v-if' should be moved to the wrapper element.","VAttribute","no-undef","'showDateJS' is not defined.","undef","'setYearSelects' is not defined.","'tFilterInit' is not defined.","'tFilterReset' is not defined.","'checkSubscription' is not defined.","'replaceAmount' is not defined.","'checkChangeParam' is not defined.","'getWDay' is not defined.","'csAmount' is not defined.","no-irregular-whitespace","Irregular whitespace not allowed.","Program","noIrregularWhitespace","no-unused-vars","'gSortBtnRow' is assigned a value but never used.","unusedVar","'wTR' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["149","150"],"no-empty","Empty block statement.","BlockStatement","unexpected","no-redeclare","'i' is already defined.","redeclared","'tFilterClick' is defined but never used.","'tFilterCancel' is defined but never used.","'tFilterGo' is defined but never used.","'reg' is not defined.","vue/require-v-for-key","Elements in iteration expect to have 'v-bind:key' directives.","VStartTag","'mm' is defined but never used.","'makeYearDatas' is not defined.","'calcYearTotal' is not defined.","'calcProfitRate' is not defined.","'calcOutRate' is not defined.",{"messageId":"151","fix":"152","desc":"153"},{"messageId":"154","fix":"155","desc":"156"},"removeEscape",{"range":"157","text":"158"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"159","text":"160"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2953,2954],"",[2953,2953],"\\"]